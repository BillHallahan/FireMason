
==================== FINAL INTERFACE ====================
2017-03-03 16:06:52.379723 UTC

interface main@main:ConvertIptablesLimits 7103
  interface hash: b6a4dcd1bed71ec033adbbc7fe7ff593
  ABI hash: 302f9d45914c7af66a094c64037391ec
  export-list hash: 595905a535d7dc765bc006c6b07a88e6
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertIptablesLimits.convertLimitRule
module dependencies: IptablesTypes Types
package dependencies: appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.7@casei_2hQWsf0VfQP5NW180eleos
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY
                      largeword-1.2.5@large_7BOdRtoTTTgFdsG28EDk6P
                      network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tostring-0.2.1.1@tostr_3WKXD89KZfc5BSX8Q5dXep
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         main@main:Types
         network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw:Network.Socket
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Addr
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Range
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
import  -/  base-4.8.2.0:Data.Char c8f827952d4111ae2e47c0b105217cdb
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Unicode cdf84fc3abbaf34ba6b6645291cef991
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  IptablesTypes 77929783e1bd548d87f5f7b07a624da9
  exports: 2ea6f182fbe7d9a4a26dc92a1b35a045
import  -/  Types 5cc88623eea062e7f6011dfd679287af
  exports: 150e5976e36f4ba67c4c37181359bbdd
  Ext 602fb4892b1deb6651658835e747d9cc
  InCLimit ccf7dfdbaf5848dede88053aeebe3b2b
  ModuleFunc a1a12e9eec1af74eb394d30b1e30a4e7
41361305657cf38c5d38e314e99a4582
  $wconvertLimitRule ::
    [GHC.Base.String]
    -> (# GHC.Base.Maybe
            [Data.Either.Either Types.FileCriteria Types.Target],
          [GHC.Base.String] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [GHC.Base.String] ->
                 case ConvertIptablesLimits.$wconvertLimitRule'
                        w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 let {
                   $w$j :: GHC.Prim.Void#
                           -> (# GHC.Base.Maybe
                                   [Data.Either.Either Types.FileCriteria Types.Target],
                                 [GHC.Base.String] #)
                     {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                   = \ void :: GHC.Prim.Void#[OneShot] ->
                     let {
                       s' :: GHC.Types.Int
                       = case ww3 of wild {
                           GHC.Base.Nothing -> ConvertIptablesLimits.convertLimitRule2
                           GHC.Base.Just ipv -> ipv }
                     } in
                     (# GHC.Base.Just
                          @ [Data.Either.Either Types.FileCriteria Types.Target]
                          (GHC.Types.:
                             @ (Data.Either.Either Types.FileCriteria Types.Target)
                             (Data.Either.Left
                                @ (Types.InputCriteria Types.FileInput)
                                @ Types.Target
                                (Types.Ext
                                   @ Types.FileInput
                                   (Types.InCLimit
                                      (case ww1 of wild {
                                         GHC.Base.Nothing -> ConvertIptablesLimits.convertLimitRule1
                                         GHC.Base.Just ipv -> ipv })
                                      (case ww2 of wild {
                                         GHC.Base.Nothing
                                         -> case s' of wild1 { GHC.Types.I# y ->
                                            GHC.Types.I# (GHC.Prim.*# 5 y) }
                                         GHC.Base.Just ipv
                                         -> case ipv of wild1 { GHC.Types.I# x ->
                                            case s' of wild2 { GHC.Types.I# y ->
                                            GHC.Types.I# (GHC.Prim.*# x y) } } })
                                      s')))
                             (GHC.Types.[]
                                @ (Data.Either.Either Types.FileCriteria Types.Target))),
                        ww4 #)
                 } in
                 case ww1 of wild {
                   GHC.Base.Nothing
                   -> case ww2 of wild1 {
                        GHC.Base.Nothing
                        -> (# GHC.Base.Nothing
                                @ [Data.Either.Either Types.FileCriteria Types.Target],
                              ww4 #)
                        GHC.Base.Just ipv -> $w$j GHC.Prim.void# }
                   GHC.Base.Just ipv -> $w$j GHC.Prim.void# } }) -}
cbea7d9fdee2c2023117c4dbde610167
  $wconvertLimitRule' ::
    [GHC.Base.String]
    -> (# GHC.Base.Maybe GHC.Types.Int,
          GHC.Base.Maybe GHC.Types.Int,
          GHC.Base.Maybe GHC.Types.Int,
          [GHC.Base.String] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
0f6bf186f76b60f4afd6b9c26abdae7c
  convertLimitRule :: Types.ModuleFunc
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [GHC.Base.String] ->
                 case ConvertIptablesLimits.$wconvertLimitRule
                        w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
d9160b3f418752f638931008ba0dfd6d
  convertLimitRule1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10800) -}
424858ad5897be82b642a933f9fd5806
  convertLimitRule2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

