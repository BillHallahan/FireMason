
==================== FINAL INTERFACE ====================
2017-03-03 16:06:52.820776 UTC

interface main@main:ConvertIptables 7103
  interface hash: 0f0bdb3f0707a987eb58615d2ce346a9
  ABI hash: 5872ddc3f380b8d79ef40b8b662fc6f7
  export-list hash: 8e9c7987e07f6e90ba9667f0793f03cd
  orphan hash: 5cb7e0b427d28c848455c08dc49c13b9
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertIptables.convertCommand
  ConvertIptables.convertCriteriaOrTarget
  ConvertIptables.convertLine
  ConvertIptables.convertLines
  ConvertIptables.convertScript
  ConvertIptables.convertScript'
  ConvertIptables.convertTarget
  ConvertIptables.convertToChains
  ConvertIptables.defaultChainNames
  ConvertIptables.moduleFuncsMap
  ConvertIptables.protocolConvertFuncs
  ConvertIptables.protocolToNum
  ConvertIptables.replaceMap
  ConvertIptables.subBashVariables
module dependencies: ConvertIptablesLimits ConvertIptablesPorts
                     IptablesTypes ParserHelp Types
package dependencies: MissingH-1.3.0.2@Missi_JQoKIaJuITOBZjt8xhTikH
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.7@casei_2hQWsf0VfQP5NW180eleos
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY
                      largeword-1.2.5@large_7BOdRtoTTTgFdsG28EDk6P
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      regex-compat-0.95.1@regex_EyUO1k1s8YNJ81jSdgVW1z
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tostring-0.2.1.1@tostr_3WKXD89KZfc5BSX8Q5dXep
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         main@main:Types
         network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw:Network.Socket
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Addr
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Range
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
import  -/  MissingH-1.3.0.2@Missi_JQoKIaJuITOBZjt8xhTikH:Data.List.Utils ce981cfe310794ef1a8cce64686b662a
import  -/  MissingH-1.3.0.2@Missi_JQoKIaJuITOBZjt8xhTikH:Data.String.Utils 648cc5d90663b3d1816ffda72f371606
import  -/  base-4.8.2.0:Data.Char c8f827952d4111ae2e47c0b105217cdb
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:GHC.Unicode cdf84fc3abbaf34ba6b6645291cef991
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map bf7758bd12b23a367777a33fd16e39de
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base 8b0bee2cbf19008d0429e93c882cbe4e
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP 01265d616023459ed1a88e34df15c136
import  -/  ConvertIptablesLimits 302f9d45914c7af66a094c64037391ec
  exports: 595905a535d7dc765bc006c6b07a88e6
  convertLimitRule 0f6bf186f76b60f4afd6b9c26abdae7c
import  -/  ConvertIptablesPorts abd179e703a5b185aaa9951c9ccc3746
  exports: 17e967d7630729077fa5b434f01119f9
  convertMultiportRule 6a84d7084a6068c851d403d1189319d9
  convertTCPRule 5517b5bcccd38c5a4398c3cb95714662
  convertUDPRule 74dbe7a520cd800cdf758df89e99aef7
import  -/  IptablesTypes 77929783e1bd548d87f5f7b07a624da9
  exports: 2ea6f182fbe7d9a4a26dc92a1b35a045
  Append 40c35647cc644dfa5212fe1713b1d46d
  Command 602f4fd470108f924d36e047f3eb72f6
  DeleteChain a9e2e895344b444a13b6ccbd06fc4538
  Flush e388ddde9b87bd9672b0519e57f38b36
  Insert 962c4dc7388417fd8f29498ff9c5ea3f
  Line bcbfa2336967217736de0d58be911cb3
  Line 79528705ee58632c23c492e3fa7ad7c4
  New 7a0afe303eab9eef75ad7ea75915b000
  None 6aed3762117e3fc7e00fe0fdbb8e3ff3
  Policy 6bb2436faac8f61057cf4e70e2650c35
  command e19929f27dfd3ab9faeb59836fdad5cb
  rule 4980adf6e9db7f7c5dc3ea5e2b2586f9
  table e865f2957bcdb32a563e6061a8a731c6
import  -/  ParserHelp c7affdab4be2cddd08133e07d05d3b63
  exports: 4408f0f73d248a4701f2f315f854c188
  isInteger cc10131991668b1b7abaf3e084cfc260
import  -/  Types 5cc88623eea062e7f6011dfd679287af
  exports: 150e5976e36f4ba67c4c37181359bbdd
  ACCEPT c3a03ad0d4498a63dd85ab66746d4eca
  And df5fb54a2110a27758fbe9675de5424a
  DROP 8acb0376b37b6423d43f53c5349a67eb
  Destination 922d80ba258cc0a086584d38ca75ebef
  Ext 602fb4892b1deb6651658835e747d9cc
  FileChain afffda57cf84b65c064abb67c0359334
  FileCriteria c97d8c97ce717d48999c803dd9ea2e81
  GoTo 0cfb9cb22e38b3c598df847796ad7f3f
  IPAddress f8c5099a7237025ef3713bebfb52a514
  InC 2a5f9ce572febac397c57a2dc6471dfd
  InCNot 6bb52d82617bd14e3cad7bd94157d8c0
  InCUnrecognizedCriteria ee0627d04e20bde8a5ab756099b7525e
  Jump b898c6ce6291439851a576d2ea022dd2
  Label 8ea1cbc35ff6354c4e178e365701b867
  ModuleFunc a1a12e9eec1af74eb394d30b1e30a4e7
  Protocol dd6c0e897be9409b806a307928ee6cd1
  RETURN e58db076939f1c047b4f1ff9c20f1b1c
  Rule 1d4b9954523d9dff99b05d967c44b033
  Source b53eb4518fedc84d30c0b4327bd32c7d
  Target c86273e8d5a2db581a040f85173b28c7
  UnrecognizedTarget 914e1396aba0180d31e01e45ffd58fb3
  eitherToRule df9a0dee781d0940aa9fc67a16da01b9
  targets f70e06da4eb5a74e71183801cbf417b6
  toIPRange ad27115d47e70cf4bf18c6f6002efb91
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split 487cc1966f0f25916f1ba58bdff4b0ee
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split.Internals ec8cf5264ec78ab060cadb7ee5b994f0
8f3126123a9807260c8df3ec987129cc
  $sadjust_$sgo10 ::
    (GHC.Base.String -> a1 -> GHC.Base.Maybe a1)
    -> GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <L,1*C1(C1(U))><S,1*U><S,1*U> -}
3aa4daff8c78b0e97be38e70869e7706
  $sfindWithDefault1 ::
    a -> GHC.Base.String -> Data.Map.Base.Map GHC.Base.String a -> a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,1*U><S,1*U> -}
e27ea29a1396ae6e15d39b5e991476ad
  $sfromList ::
    [(GHC.Types.Int, a)] -> Data.Map.Base.Map GHC.Types.Int a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a2 ds :: [(GHC.Types.Int, a2)] ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ GHC.Types.Int @ a2
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { GHC.Types.I# ipv ->
                           Data.Map.Base.Bin
                             @ GHC.Types.Int
                             @ a2
                             1
                             dt
                             x
                             (Data.Map.Base.Tip @ GHC.Types.Int @ a2)
                             (Data.Map.Base.Tip @ GHC.Types.Int @ a2) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { GHC.Types.I# x1 ->
                           case ky of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> ConvertIptables.$wpoly_go10
                                  @ a2
                                  1
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Int
                                     @ a2
                                     1
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a2)
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a2))
                                  wild2
                             GHC.Types.True
                             -> ConvertIptables.$sfromList1
                                  @ a2
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Int
                                     @ a2
                                     1
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a2)
                                     (Data.Map.Base.Tip @ GHC.Types.Int @ a2))
                                  wild2 } } } } } } }) -}
f3e572805364916335491f3b6d0661f5
  $sfromList1 ::
    Data.Map.Base.Map GHC.Types.Int a1
    -> [(GHC.Types.Int, a1)] -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
a170674e00a48c29a220c1439a367888
  $sinsert_$sgo1 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
a61b9ea364cc7c5d7f93ceb2d4f041b3
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
a33a2123e73acd634bfad02d6ddf7cf1
  $slookup3 ::
    GHC.Types.Int
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a2
                   w :: GHC.Types.Int
                   w1 :: Data.Map.Base.Map GHC.Types.Int a2 ->
                 case w of ww { GHC.Types.I# ww1 ->
                 ConvertIptables.$wpoly_go1 @ a2 ww1 w1 }) -}
0a4b35d33f5f8bbc94d4652c25aa81be
  $smember1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
ca17b087588bd9c8ef74e1ddd47a3081
  $w$sgo10 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
6db00a572cd13b2d9da3fa4983fdc4ac
  $wconvertCommand ::
    [GHC.Base.String]
    -> (# GHC.Base.Maybe IptablesTypes.Command, [GHC.Base.String] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
7bf3da5943f4b58ff2dcb1017f52728b
  $wconvertCriteriaOrTarget ::
    [GHC.Base.String]
    -> [Types.ModuleFunc]
    -> Types.Label
    -> (# [Data.Either.Either Types.FileCriteria Types.Target],
          [GHC.Base.String],
          GHC.Base.Maybe Types.ModuleFunc #)
  {- Arity: 3, Strictness: <S,1*U><L,1*U><L,U>, Inline: [0] -}
db2ebf49bfab8d182366323a9500c187
  $wconvertLine ::
    [GHC.Base.String]
    -> GHC.Types.Int
    -> [Types.ModuleFunc]
    -> (# IptablesTypes.Table,
          IptablesTypes.Command,
          IptablesTypes.IptablesRule,
          GHC.Types.Int #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>, Inline: [0] -}
acb350987bd2cdca793ac34089520a68
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
c240344e028212dd1af0060c4e50fc91
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a
    -> [(GHC.Types.Int, a)]
    -> Data.Map.Base.Map GHC.Types.Int a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
c7d83452c21e2590e4dd5d14b4adf3c7
  convertCommand ::
    ([GHC.Base.String], GHC.Types.Int)
    -> (GHC.Base.Maybe IptablesTypes.Command, [GHC.Base.String])
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,A)>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: ([GHC.Base.String], GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ConvertIptables.$wconvertCommand ww1 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
9552d5f7e5a21795644af7be5905ab71
  convertCriteriaOrTarget ::
    [GHC.Base.String]
    -> [Types.ModuleFunc]
    -> Types.Label
    -> ([Data.Either.Either Types.FileCriteria Types.Target],
        [GHC.Base.String],
        GHC.Base.Maybe Types.ModuleFunc)
  {- Arity: 3, Strictness: <S,1*U><L,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: [GHC.Base.String]
                   w1 :: [Types.ModuleFunc]
                   w2 :: Types.Label ->
                 case ConvertIptables.$wconvertCriteriaOrTarget
                        w
                        w1
                        w2 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
09b363d902e0bf84b307b2a8ef13a665
  convertLine ::
    ([GHC.Base.String], GHC.Types.Int)
    -> [Types.ModuleFunc] -> IptablesTypes.Line
  {- Arity: 2, Strictness: <S(SL),1*U(1*U,U)><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: ([GHC.Base.String], GHC.Types.Int)
                   w1 :: [Types.ModuleFunc] ->
                 case w of ww { (,) ww1 ww2 ->
                 case ConvertIptables.$wconvertLine
                        ww1
                        ww2
                        w1 of ww3 { (#,,,#) ww4 ww5 ww6 ww7 ->
                 IptablesTypes.Line ww4 ww5 ww6 ww7 } }) -}
8053a1bfcbacf8ef12e996b5259d0b82
  convertLines ::
    [([GHC.Base.String], GHC.Types.Int)] -> [IptablesTypes.Line]
  {- Arity: 1, Strictness: <S,1*U> -}
6f4e66533dbf58268bd5fdc60cad79b2
  convertScript ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String Types.FileChain
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ coms :: GHC.Base.String ->
                 ConvertIptables.convertToChains
                   (ConvertIptables.convertScript' coms)
                   ConvertIptables.convertScript1) -}
a92eaa00ec185591142f4baf87ba5923
  convertScript' :: GHC.Base.String -> [IptablesTypes.Line]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ coms :: GHC.Base.String ->
                 ConvertIptables.convertLines
                   (GHC.Base.map
                      @ (GHC.Base.String, GHC.Types.Int)
                      @ ([GHC.Base.String], GHC.Types.Int)
                      ConvertIptables.convertScript'9
                      (ConvertIptables.subBashVariables
                         (ConvertIptables.convertScript'_go
                            (Data.OldList.lines coms)
                            ConvertIptables.convertScript'8)
                         ConvertIptables.convertScript'1))) -}
debf135725f77ba3daa3d35125531608
  convertScript'1 :: [(GHC.Base.String, GHC.Base.String)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   ConvertIptables.convertScript'6
                   ConvertIptables.convertScript'2) -}
b8fe2a6c6fa086fcf52dad1d3e8c3ef0
  convertScript'2 :: [(GHC.Base.String, GHC.Base.String)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   ConvertIptables.convertScript'3
                   (GHC.Types.[] @ (GHC.Base.String, GHC.Base.String))) -}
f305bd5d6c8c9d7f621f6b347b6b3838
  convertScript'3 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((ConvertIptables.convertScript'5,
                  ConvertIptables.convertScript'4)) -}
6f0467727b19e1a1ab7c501d8c6aa963
  convertScript'4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iptables"#) -}
77263b85b52dd2ad54433c865ce59948
  convertScript'5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\"/sbin/iptables\""#) -}
3d54b361a36e1ace3ebaa43615de29f7
  convertScript'6 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((ConvertIptables.convertScript'7,
                  ConvertIptables.convertScript'4)) -}
cc49ec0507b4853b5c4e668fbf6a9c20
  convertScript'7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/sbin/iptables"#) -}
2db0f17067190ffb9b6199451806793f
  convertScript'8 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1 9223372036854775807) -}
cc96712efbe35c7a003226d9859969db
  convertScript'9 ::
    (GHC.Base.String, GHC.Types.Int)
    -> ([GHC.Base.String], GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(1*U,U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: (GHC.Base.String, GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 (Data.OldList.wordsFB
                    @ [[GHC.Types.Char]]
                    (\ x :: [GHC.Types.Char] ys :: [[GHC.Types.Char]][OneShot] ->
                     GHC.Types.:
                       @ [GHC.Types.Char]
                       (ConvertIptables.$sfindWithDefault1
                          @ [GHC.Types.Char]
                          x
                          x
                          ConvertIptables.replaceMap)
                       ys)
                    (GHC.Types.[] @ [GHC.Types.Char])
                    ww1,
                  ww2) }) -}
fd34d0b584beffaeae62f56dee4e1ec6
  convertScript'_go ::
    [[GHC.Types.Char]]
    -> [GHC.Types.Int] -> [([GHC.Types.Char], GHC.Types.Int)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
d264c05a1b5f6d311a95a58e92b77e36
  convertScript1 ::
    Data.Map.Base.Map GHC.Base.String [Types.FileRule]
  {- Unfolding: (Types.$sfromList1
                   @ [Types.FileRule]
                   ConvertIptables.convertScript2) -}
50ecd5d6f2a3e732a6ef2029c522b881
  convertScript2 :: [(GHC.Base.String, [Types.FileRule])]
  {- Unfolding: (GHC.Base.map
                   @ [GHC.Types.Char]
                   @ (GHC.Base.String, [Types.FileRule])
                   ConvertIptables.convertScript3
                   ConvertIptables.defaultChainNames) -}
5a7e3e7ec0850d0dc783638b6e3e071a
  convertScript3 ::
    GHC.Base.String -> (GHC.Base.String, [Types.FileRule])
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ c :: GHC.Base.String ->
                 (c, GHC.Types.[] @ Types.FileRule)) -}
aee9ddadb7792d20f2a4a6b81033b19b
  convertTarget :: GHC.Base.String -> Types.Target
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ ds :: [GHC.Types.Char] ->
                 case GHC.Base.eqString ds ConvertIptables.convertTarget3 of wild {
                   GHC.Types.False
                   -> case GHC.Base.eqString
                             ds
                             ConvertIptables.convertTarget2 of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString
                                  ds
                                  ConvertIptables.convertTarget1 of wild2 {
                             GHC.Types.False -> Types.Jump ds GHC.Types.True -> Types.RETURN }
                        GHC.Types.True -> Types.DROP }
                   GHC.Types.True -> Types.ACCEPT }) -}
6fdd05845d934c2cc5506e5607b20710
  convertTarget1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RETURN"#) -}
3361a6964a2063d8f690ed80ac10f878
  convertTarget2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DROP"#) -}
ca4f3b627f5ee24f8868fd40982f9a8c
  convertTarget3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ACCEPT"#) -}
b140e479bb5a4ff7333ba8bf6b9451fa
  convertToChains ::
    [IptablesTypes.Line]
    -> Data.Map.Base.Map GHC.Base.String Types.FileChain
    -> Data.Map.Base.Map GHC.Base.String Types.FileChain
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
3a3e530e5bd73cb655f00abd65c0aa30
  defaultChainNames :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   ConvertIptables.defaultChainNames5
                   ConvertIptables.defaultChainNames1) -}
7495cea2a6aa62519156bb01d7c45503
  defaultChainNames1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   ConvertIptables.defaultChainNames4
                   ConvertIptables.defaultChainNames2) -}
1419a7a5e0d6ca920aa372e68fe75ba3
  defaultChainNames2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   ConvertIptables.defaultChainNames3
                   (GHC.Types.[] @ GHC.Base.String)) -}
5051745380d2d970841c078950a31c8e
  defaultChainNames3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FORWARD"#) -}
6ea829034831f43002e3da01d2a32dbd
  defaultChainNames4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OUTPUT"#) -}
2981d2c2a6da0bf3c2952b45e523fbd4
  defaultChainNames5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INPUT"#) -}
b56c854701f66f71adbdf3611900de2c
  moduleFuncsMap ::
    Data.Map.Base.Map GHC.Base.String Types.ModuleFunc
  {- Unfolding: (Types.$sfromList1
                   @ ([GHC.Base.String]
                      -> (GHC.Base.Maybe
                            [Data.Either.Either Types.FileCriteria Types.Target],
                          [GHC.Base.String]))
                   ConvertIptables.moduleFuncsMap1) -}
104e919e08b69ab12b62420659afc670
  moduleFuncsMap1 :: [(GHC.Base.String, Types.ModuleFunc)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.ModuleFunc)
                   ConvertIptables.moduleFuncsMap5
                   ConvertIptables.moduleFuncsMap2) -}
f3f5193797e1bf985f7664e0ba2b0c26
  moduleFuncsMap2 :: [(GHC.Base.String, Types.ModuleFunc)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.ModuleFunc)
                   ConvertIptables.moduleFuncsMap3
                   (GHC.Types.[] @ (GHC.Base.String, Types.ModuleFunc))) -}
c1be74873d6753fde7d3587b2fb8dbad
  moduleFuncsMap3 :: ([GHC.Types.Char], Types.ModuleFunc)
  {- Unfolding: ((ConvertIptables.moduleFuncsMap4,
                  ConvertIptablesPorts.convertMultiportRule)) -}
74e1c8df341005c819bb141e238cbc52
  moduleFuncsMap4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "multiport"#) -}
d8dfeee984f3c75860a1cb8f4c23c46a
  moduleFuncsMap5 :: ([GHC.Types.Char], Types.ModuleFunc)
  {- Unfolding: ((ConvertIptables.moduleFuncsMap6,
                  ConvertIptablesLimits.convertLimitRule)) -}
f86b63edf7dd05e99fb95c860ed3052d
  moduleFuncsMap6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "limit"#) -}
e461b70523974c1403705dae9d3e1427
  protocolConvertFuncs ::
    Data.Map.Base.Map GHC.Types.Int Types.ModuleFunc
  {- Unfolding: (ConvertIptables.$sfromList
                   @ ([GHC.Base.String]
                      -> (GHC.Base.Maybe
                            [Data.Either.Either Types.FileCriteria Types.Target],
                          [GHC.Base.String]))
                   ConvertIptables.protocolConvertFuncs1) -}
1711054cf6c8d9add7248d8573b06804
  protocolConvertFuncs1 :: [(GHC.Types.Int, Types.ModuleFunc)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, Types.ModuleFunc)
                   ConvertIptables.protocolConvertFuncs5
                   ConvertIptables.protocolConvertFuncs2) -}
9f1c85002035cfdbe71f97af90e81d5c
  protocolConvertFuncs2 :: [(GHC.Types.Int, Types.ModuleFunc)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, Types.ModuleFunc)
                   ConvertIptables.protocolConvertFuncs3
                   (GHC.Types.[] @ (GHC.Types.Int, Types.ModuleFunc))) -}
192cf5bcc533945b13c505d0c716df71
  protocolConvertFuncs3 :: (GHC.Types.Int, Types.ModuleFunc)
  {- Unfolding: ((ConvertIptables.protocolConvertFuncs4,
                  ConvertIptablesPorts.convertUDPRule)) -}
53668904f01a24ba4c37c5233edb5dbb
  protocolConvertFuncs4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17) -}
e8e6cfd7c645aae811ceff78204de51d
  protocolConvertFuncs5 :: (GHC.Types.Int, Types.ModuleFunc)
  {- Unfolding: ((ConvertIptables.protocolConvertFuncs6,
                  ConvertIptablesPorts.convertTCPRule)) -}
e188c10556a74eea52efc01138f7e8b4
  protocolConvertFuncs6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 6) -}
d7c02b2feb809d43a3c3156563dfc0c5
  protocolToNum :: Data.Map.Base.Map GHC.Base.String GHC.Types.Int
  {- Unfolding: (Types.$sfromList1
                   @ GHC.Types.Int
                   ConvertIptables.protocolToNum1) -}
fa224900252a01108381d264697fc487
  protocolToNum1 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum33
                   ConvertIptables.protocolToNum2) -}
b1e8d873e0a65494b35f615b542901ea
  protocolToNum10 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum12,
                  ConvertIptables.protocolToNum11)) -}
fdc27dceae690055e254649c3de98ebb
  protocolToNum11 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# (-1)) -}
454ad3931e9f6e293feb26f603405292
  protocolToNum12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "all"#) -}
21f8ea679e416a33695b6a1cbc89db46
  protocolToNum13 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum15,
                  ConvertIptables.protocolToNum14)) -}
6862611b0deb7086d099c28ce438bb96
  protocolToNum14 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 132) -}
b683b78e399f6533fde870893dc2062d
  protocolToNum15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sctp"#) -}
43edd499649d4de299f023e33a2ed77b
  protocolToNum16 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum18,
                  ConvertIptables.protocolToNum17)) -}
109ddfb8f9b7f7713accdd69061a37fb
  protocolToNum17 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51) -}
75e8f59655e2469de4a1f7c7b3139b7b
  protocolToNum18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ah"#) -}
480a57751c1cdfb1c525ad688fe16684
  protocolToNum19 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum21,
                  ConvertIptables.protocolToNum20)) -}
78b8b7755ed5e0b263ce8f9e28bedbc9
  protocolToNum2 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum31
                   ConvertIptables.protocolToNum3) -}
300192081abe2b22b48171011c77aeb2
  protocolToNum20 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 50) -}
8b0792e0f7db6641757e6b20158c84de
  protocolToNum21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "esp"#) -}
ca42c3a97992166da75de5476289e6a2
  protocolToNum22 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum24,
                  ConvertIptables.protocolToNum23)) -}
29046f36534b750251fafe1062ca3005
  protocolToNum23 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 58) -}
ae7b8214814db4b9ff2f65213097ed3f
  protocolToNum24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "icmpv6"#) -}
9b5b4adf300f14fbea360fa71c09fc68
  protocolToNum25 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum27,
                  ConvertIptables.protocolToNum26)) -}
5a5d898ed5ce206b64561dda23938570
  protocolToNum26 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1) -}
d76b7164192ac1bfbf045cb50c11fa90
  protocolToNum27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "icmp"#) -}
9092b3685822daba3248bd0d87308283
  protocolToNum28 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum30,
                  ConvertIptables.protocolToNum29)) -}
6c0156b334d37e739e80ae778f5797b9
  protocolToNum29 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 136) -}
9df7ed5cbc258e2a1e93334fb87e3c1f
  protocolToNum3 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum28
                   ConvertIptables.protocolToNum4) -}
f5814c9696f7c17b22e78c6453a4ffdd
  protocolToNum30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "udplite"#) -}
915310a71a8fd0171b994bd892021b95
  protocolToNum31 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum32,
                  ConvertIptables.protocolConvertFuncs4)) -}
c1a8d910e73e70c160f7dba42a99c346
  protocolToNum32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "udp"#) -}
f6acbf8427dcd86168ae29e6bf1503cc
  protocolToNum33 :: ([GHC.Types.Char], GHC.Types.Int)
  {- Unfolding: ((ConvertIptables.protocolToNum34,
                  ConvertIptables.protocolConvertFuncs6)) -}
0b87b615a5d34ab3d109ca66ba9d6654
  protocolToNum34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tcp"#) -}
8864d909d429987f08d3011eeb700c0b
  protocolToNum4 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum25
                   ConvertIptables.protocolToNum5) -}
1b07f572c762b5e0a89064c9981f5ddb
  protocolToNum5 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum22
                   ConvertIptables.protocolToNum6) -}
4092d3d8c970cc610b52c5f62bea2a11
  protocolToNum6 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum19
                   ConvertIptables.protocolToNum7) -}
60ea1215eed284aa2e4171563cea44e4
  protocolToNum7 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum16
                   ConvertIptables.protocolToNum8) -}
57483ad8ca95006549bbdfdbb5ce929f
  protocolToNum8 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum13
                   ConvertIptables.protocolToNum9) -}
a1252b0302a5c63f34ccda65888b3339
  protocolToNum9 :: [([GHC.Types.Char], GHC.Types.Int)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.Types.Int)
                   ConvertIptables.protocolToNum10
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.Types.Int))) -}
274f1d01a7b67d12ac799604f0ec0463
  replaceMap :: Data.Map.Base.Map GHC.Base.String GHC.Base.String
  {- Unfolding: (Types.$sfromList1
                   @ [GHC.Types.Char]
                   ConvertIptables.replaceMap1) -}
079c79d6254485951656b198da5067a7
  replaceMap1 :: [(GHC.Base.String, GHC.Base.String)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   ConvertIptables.replaceMap18
                   ConvertIptables.replaceMap2) -}
e8a5bfa3cfa06c49a9be65a5467c8aac
  replaceMap10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-I"#) -}
161d3f9caf334215cc91bf9abf4713c7
  replaceMap11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "--insert"#) -}
522ac9029e4359ccc703621be26f4846
  replaceMap12 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((ConvertIptables.replaceMap14,
                  ConvertIptables.replaceMap13)) -}
011aff4d778da2a850922145230c5cd3
  replaceMap13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-F"#) -}
c21d2fd4c10c7d8cc69df45bcce0188b
  replaceMap14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "--flush"#) -}
2c3068280e617385ec1222ee6212cd59
  replaceMap15 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((ConvertIptables.replaceMap17,
                  ConvertIptables.replaceMap16)) -}
4e1d489d7d04fba0943566e8595054d5
  replaceMap16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-X"#) -}
76b493a5ab601842b56b7af7ebdb6b5e
  replaceMap17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "--delete-chain"#) -}
00a5512467dc9897c2a985889a577658
  replaceMap18 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((ConvertIptables.replaceMap20,
                  ConvertIptables.replaceMap19)) -}
ed54ec2df9784d21943cc7eebd9883a5
  replaceMap19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-A"#) -}
fabe2761afb74d88858bdb283f1f2552
  replaceMap2 :: [(GHC.Base.String, GHC.Base.String)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   ConvertIptables.replaceMap15
                   ConvertIptables.replaceMap3) -}
7ddaf36d8760fab279fc357917b9765d
  replaceMap20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "--append"#) -}
7f3962d7680fcc45bb6d8df177f8d0b6
  replaceMap3 :: [(GHC.Base.String, GHC.Base.String)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   ConvertIptables.replaceMap12
                   ConvertIptables.replaceMap4) -}
88b6fe7ae6e1425320907d7352ce690c
  replaceMap4 :: [(GHC.Base.String, GHC.Base.String)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   ConvertIptables.replaceMap9
                   ConvertIptables.replaceMap5) -}
8feb1e83873f9d5afb0930fb2e383af2
  replaceMap5 :: [(GHC.Base.String, GHC.Base.String)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   ConvertIptables.replaceMap6
                   (GHC.Types.[] @ (GHC.Base.String, GHC.Base.String))) -}
7d9630c6f10015527af607941bdfae62
  replaceMap6 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((ConvertIptables.replaceMap8,
                  ConvertIptables.replaceMap7)) -}
456c0fe9f94905239f44635c0870dad7
  replaceMap7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-N"#) -}
42437c536dd401447016b8fccf766800
  replaceMap8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "--new-chain"#) -}
694992e426005f93737f9e857595d197
  replaceMap9 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((ConvertIptables.replaceMap11,
                  ConvertIptables.replaceMap10)) -}
7ca422ba74223ee22d495ed4f6708d5a
  subBashVariables ::
    [(GHC.Base.String, GHC.Types.Int)]
    -> [(GHC.Base.String, GHC.Base.String)]
    -> [(GHC.Base.String, GHC.Types.Int)]
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
"SPEC/ConvertIptables fromList @ Int _" [ALWAYS] forall @ a2
                                                        $dOrd :: GHC.Classes.Ord GHC.Types.Int
  Data.Map.Base.fromList @ GHC.Types.Int @ a2 $dOrd
  = ConvertIptables.$sfromList @ a2
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

