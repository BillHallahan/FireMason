
==================== FINAL INTERFACE ====================
2016-08-01 22:24:18.646586 UTC

interface main@main:Main 7103
  interface hash: fc2e411e50b55e10a4c8d6401258cf14
  ABI hash: 6157ca851b27fa0b09644e42e0de66c7
  export-list hash: e9b1fcb7c2b832edeb0a75c04cf3dbea
  orphan hash: 22708e38eab943947d89fcbf4ea2e117
  flag hash: 1e3361fb471ccc1f0605f4d3c4d9aa91
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.convertScript
  Main.main
  Main.subBashVariables
module dependencies: ChainsToSMT2 ConvertIptables
                     ConvertIptablesPorts ConvertToHorn IptablesTypes NameIdChain
                     ParseSpecificationLanguage ParserHelp RuleAdding SMT Types
package dependencies: MissingH-1.3.0.2@Missi_0LYz2ExiF1QEfGgduKzSaZ
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      regex-compat-0.95.1@regex_EyUO1k1s8YNJ81jSdgVW1z
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  MissingH-1.3.0.2@Missi_0LYz2ExiF1QEfGgduKzSaZ:Data.List.Utils 3175b3ec4b48152a0154ae1c82f8e5ca
import  -/  MissingH-1.3.0.2@Missi_0LYz2ExiF1QEfGgduKzSaZ:Data.String.Utils 635ce11bcb5f4c4a71b87f62bdb0d8da
import  -/  base-4.8.2.0:Data.Char c8f827952d4111ae2e47c0b105217cdb
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO.Handle.Text 06d2dc7704bcfe88a2157fd04748ace5
import  -/  base-4.8.2.0:GHC.IO.IOMode 89fcaeb96929360e7be5a7bbb14ceec9
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:GHC.Unicode cdf84fc3abbaf34ba6b6645291cef991
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.IO 0899686bfc1d9ef72dff3de85e99862a
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map bf7758bd12b23a367777a33fd16e39de
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base c921f79770a215e3f4c72c747cb6a28a
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ChainsToSMT2 cde751d47b63a853512dfd91fc117aa1
  exports: 116a23a42f5b28b393be927d1dd4514a
  convertChainsCheckSMT bb220a39a738f6670a6ce17997da3e9e
import  -/  ConvertIptables 07f65a5bbb067a328cf0618e77f8642e
  exports: 4a144007b859e3a59dd9da15010de434
  convertLines a47788c8245e0be814769fb642ff25d9
  convertToChains ac67e17341b53eaad05c7ffcf1a532c6
import  -/  ConvertToHorn 4c908f76448bcb40b92154191fe21883
  exports: 76cec1257792e94428092746d96d37c3
  inputInstructionsToInstructions d9f078f8130e8f61025f793d0ba94af5
  stringInputChainsToStringChains 9cc3df73b6a462bc67efc21d658ff965
import  -/  IptablesTypes a3068a0e8b95259758cd9e2a88dcc2c1
  exports: 487856e79b078f5a837392b58e7afa97
import  -/  NameIdChain a3f302b52e0ae93eec39f653620979f7
  exports: 067093adcf19cf9b7d63999521430201
  pathSimplification 1da277a8f63755f588c2d6990132af03
import  -/  ParseSpecificationLanguage 33141fe9b283368f7891ec7247263f60
  exports: 97b3a15dfab8f73d45ff5f6798ca2b79
  lexer 77c583e36e586e5038c1f8ebe9f4eeb6
  parse b6adca2530be916a742ec21fcbebf527
import  -/  RuleAdding c934e04e80db2e41075ddc6682d53c1a
  exports: eb7d3d9ba91c4dd200996c613845cb34
  addRules 8fddb97c315dff9b365211fd7e6e9efc
import  -/  SMT ad5cc286b4b8f93c12204fc2a9edd888
  exports: a94561e4d0f7927a3335aa58f6911b1b
  callSMTSolver 4898fbcbbc43ed3344f5a9528a599636
import  -/  Types 7934cc096ad4ac018aac4adeb7e3cd39
  exports: 39af0f5b1cafb87923b315bfa9b266b9
  InputChain 21741417fa13a64d47626b28a64ff34f
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split 487cc1966f0f25916f1ba58bdff4b0ee
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split.Internals ec8cf5264ec78ab060cadb7ee5b994f0
dcb2f8385cd9efbf0bd5430fa8f98df7
  $s$fShowGenRule :: GHC.Show.Show (Types.GenRule Types.Criteria)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Types.GenRule Types.Criteria)
                  (Types.$fShowGenRule_$cshowsPrec
                     @ Types.Criteria
                     Types.$fShowCriteria)
                  Main.$s$fShowGenRule3
                  Main.$s$fShowGenRule1 -}
caa9f4968ce26a1edb3ef071cd3a4dcd
  $s$fShowGenRule1 ::
    [Types.GenRule Types.Criteria] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ eta :: [Types.GenRule Types.Criteria]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (Types.GenRule Types.Criteria)
                   Main.$s$fShowGenRule2
                   eta
                   eta1) -}
9541bb21b08542ae7968dc709bdef7cb
  $s$fShowGenRule2 :: Types.GenRule Types.Criteria -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w2 :: Types.GenRule Types.Criteria ->
                 case w2 of ww2 { Types.Rule ww3 ww4 ->
                 Types.$w$cshowsPrec1
                   @ Types.Criteria
                   Types.$fShowCriteria
                   0
                   ww3
                   ww4 }) -}
6b9db04bac7adfe0e1d3ea12b78e0d95
  $s$fShowGenRule3 :: Types.GenRule Types.Criteria -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Types.GenRule Types.Criteria ->
                 case x of ww2 { Types.Rule ww3 ww4 ->
                 Types.$w$cshowsPrec1
                   @ Types.Criteria
                   Types.$fShowCriteria
                   0
                   ww3
                   ww4
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
41786aa415a26dd876b2671a81d51035
  $s$fShowGenRule4 ::
    GHC.Show.Show (Types.GenRule Types.InputCriteria)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Types.GenRule Types.InputCriteria)
                  (Types.$fShowGenRule_$cshowsPrec
                     @ Types.InputCriteria
                     Types.$fShowInputCriteria)
                  Main.$s$fShowGenRule7
                  Main.$s$fShowGenRule5 -}
3ae59b63e2e613b65f4118996ad376b9
  $s$fShowGenRule5 ::
    [Types.GenRule Types.InputCriteria] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ eta :: [Types.GenRule Types.InputCriteria]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (Types.GenRule Types.InputCriteria)
                   Main.$s$fShowGenRule6
                   eta
                   eta1) -}
1871fbd37051f2d8c9b499530ab45b66
  $s$fShowGenRule6 ::
    Types.GenRule Types.InputCriteria -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w2 :: Types.GenRule Types.InputCriteria ->
                 case w2 of ww2 { Types.Rule ww3 ww4 ->
                 Types.$w$cshowsPrec1
                   @ Types.InputCriteria
                   Types.$fShowInputCriteria
                   0
                   ww3
                   ww4 }) -}
7926fa01c36b3d41a9abb978c1a08afb
  $s$fShowGenRule7 ::
    Types.GenRule Types.InputCriteria -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Types.GenRule Types.InputCriteria ->
                 case x of ww2 { Types.Rule ww3 ww4 ->
                 Types.$w$cshowsPrec1
                   @ Types.InputCriteria
                   Types.$fShowInputCriteria
                   0
                   ww3
                   ww4
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
7b0b71b671f53f3fcb282dcb3e5d0f06
  $slookup1 ::
    [GHC.Types.Char]
    -> Data.Map.Base.Map [GHC.Types.Char] a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
8ee93cea615bd66274f36cf08271a242
  convertScript ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String Types.InputChain
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ coms :: GHC.Base.String ->
                 ConvertIptables.convertToChains
                   (ConvertIptables.convertLines
                      (GHC.Base.map
                         @ (GHC.Base.String, GHC.Types.Int)
                         @ ([GHC.Base.String], GHC.Types.Int)
                         Main.convertScript16
                         (Main.subBashVariables
                            (Main.convertScript_go
                               (Data.OldList.lines coms)
                               Main.convertScript15)
                            Main.convertScript11)))
                   Main.convertScript1) -}
c1db9931ea4776a78b7170c16548e117
  convertScript1 ::
    Data.Map.Base.Map [GHC.Types.Char] [Types.InputRule]
  {- Unfolding: (ConvertIptables.$sfromList
                   @ [Types.InputRule]
                   Main.convertScript2) -}
538f1a8b2b89a2e2a580fe3382a3d8f1
  convertScript10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INPUT"#) -}
febb4ba2b8d698e40ec7060fe1060310
  convertScript11 :: [(GHC.Base.String, GHC.Base.String)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   Main.convertScript12
                   (GHC.Types.[] @ (GHC.Base.String, GHC.Base.String))) -}
f9e6f616fd6f95a83442b18b4043bd44
  convertScript12 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Main.convertScript14, Main.convertScript13)) -}
06ce851a7d060d976a4e57341481fa33
  convertScript13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iptables"#) -}
72954e2e2bf03b1e8ec1d0424b675e49
  convertScript14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/sbin/iptables"#) -}
864eb6d140d3e3eab397b5f52b340f7e
  convertScript15 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1 9223372036854775807) -}
0de933fcede22985106950d767ea68e3
  convertScript16 ::
    (GHC.Base.String, GHC.Types.Int)
    -> ([GHC.Base.String], GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: (GHC.Base.String, GHC.Types.Int) ->
                 case ds of wild { (,) s i ->
                 (GHC.Base.build
                    @ GHC.Base.String
                    (\ @ b c :: GHC.Base.String -> b -> b[OneShot] n :: b[OneShot] ->
                     Data.OldList.wordsFB @ b c n s),
                  i) }) -}
0a50c2fe3aa1eb6e9f41a0dd9be0e101
  convertScript2 :: [(GHC.Base.String, Types.InputChain)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.InputChain)
                   Main.convertScript9
                   Main.convertScript3) -}
6e4052a836bed19852be9b42d1c23cc3
  convertScript3 :: [(GHC.Base.String, Types.InputChain)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.InputChain)
                   Main.convertScript7
                   Main.convertScript4) -}
b658abd89499b583e68a278576ca9a53
  convertScript4 :: [(GHC.Base.String, Types.InputChain)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.InputChain)
                   Main.convertScript5
                   (GHC.Types.[] @ (GHC.Base.String, Types.InputChain))) -}
959ec3ade47ebd3e77434fc09483d219
  convertScript5 :: ([GHC.Types.Char], [Types.InputRule])
  {- Unfolding: ((Main.convertScript6,
                  GHC.Types.[] @ Types.InputRule)) -}
147fc91ccafcd004d476c3940fa07d4e
  convertScript6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FORWARD"#) -}
41eafca58ac07094523f514e12c2259e
  convertScript7 :: ([GHC.Types.Char], [Types.InputRule])
  {- Unfolding: ((Main.convertScript8,
                  GHC.Types.[] @ Types.InputRule)) -}
6ed2d76465774cfb1bf5b3910cb594fb
  convertScript8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OUTPUT"#) -}
7a46a465e0c2e41e9d5adc433c2d9201
  convertScript9 :: ([GHC.Types.Char], [Types.InputRule])
  {- Unfolding: ((Main.convertScript10,
                  GHC.Types.[] @ Types.InputRule)) -}
9dd08bf23f68e775510ce35e9ac90607
  convertScript_go ::
    [[GHC.Types.Char]]
    -> [GHC.Types.Int] -> [([GHC.Types.Char], GHC.Types.Int)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
ee6590a2ab0ffaa5074d93f2d3fc4c03
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e3bd864fe81295cabb6b36ca45539f6f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
20688fff09df92565d9be8c5f0313411
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
4ecf14c73b0c14c1ea96b7a160c8c440
  subBashVariables ::
    [(GHC.Base.String, GHC.Types.Int)]
    -> [(GHC.Base.String, GHC.Base.String)]
    -> [(GHC.Base.String, GHC.Types.Int)]
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
"SPEC/Main $fShowGenRule @ Criteria" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                 Types.Criteria
  Types.$fShowGenRule @ Types.Criteria $dShow = Main.$s$fShowGenRule
"SPEC/Main $fShowGenRule @ InputCriteria" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                      Types.InputCriteria
  Types.$fShowGenRule @ Types.InputCriteria $dShow
  = Main.$s$fShowGenRule4
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

