
==================== FINAL INTERFACE ====================
2016-07-30 01:51:06.485598 UTC

interface main@main:Main 7103
  interface hash: 7c7d078e3d31176bf9583571adf1010d
  ABI hash: 2faff90bb857a2373e978880ca50feb9
  export-list hash: eccaa2015c1a62043d374058d45251c5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1e3361fb471ccc1f0605f4d3c4d9aa91
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.callSMTSolver
  Main.convertScript
  Main.main
  Main.subBashVariables
module dependencies: ChainPathSimplification ChainsToSMT2
                     ConvertCommandsToChains ConvertIptables ConvertIptablesPorts
                     ConvertToHorn IptablesTypes ParseSpecificationLanguage ParserHelp
                     Types
package dependencies: MissingH-1.3.0.2@Missi_0LYz2ExiF1QEfGgduKzSaZ
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      regex-compat-0.95.1@regex_EyUO1k1s8YNJ81jSdgVW1z
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  MissingH-1.3.0.2@Missi_0LYz2ExiF1QEfGgduKzSaZ:Data.List.Utils 3175b3ec4b48152a0154ae1c82f8e5ca
import  -/  MissingH-1.3.0.2@Missi_0LYz2ExiF1QEfGgduKzSaZ:Data.String.Utils 635ce11bcb5f4c4a71b87f62bdb0d8da
import  -/  base-4.8.2.0:Data.Char c8f827952d4111ae2e47c0b105217cdb
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO bb5b81adcea33b14bd4abe16d7dde45f
import  -/  base-4.8.2.0:GHC.IO.Handle.Text 06d2dc7704bcfe88a2157fd04748ace5
import  -/  base-4.8.2.0:GHC.IO.IOMode 89fcaeb96929360e7be5a7bbb14ceec9
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:GHC.Unicode cdf84fc3abbaf34ba6b6645291cef991
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.IO 0899686bfc1d9ef72dff3de85e99862a
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map bf7758bd12b23a367777a33fd16e39de
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base c921f79770a215e3f4c72c747cb6a28a
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  ChainPathSimplification f9046b939dfaaf88fcff8658009edf4b
  exports: 756c25e0f2d36dffd08a6f679f6a8177
  pathSimplification dc8a061208ff165817e6302294758996
import  -/  ChainsToSMT2 a5b27901f1d97177000770c1a96ee159
  exports: 34ca2b5c0b259aac1024c1ba9920440d
  convertChainsCheckSMT d55a20025a7f0f9fd0dce4ff6708217c
import  -/  ConvertCommandsToChains b500996af724c8ca4d460e3fb7488005
  exports: 9b55398c89f4fd6ce5e3aee133145aff
  convertToChains 1038a63056a9370142e76fe6ce370f1d
import  -/  ConvertIptables ed22fda691d8982bd19871c54cc60df7
  exports: 3c20eb45be7d1d2c633d7ce0a3b6a3e2
  convertLine ca70c6779b4d79fb2989a3c0889dc5ba
import  -/  ConvertToHorn 097328556f17005d40c40a5ecd541a8c
  exports: b5f037d6452ad3c0b4404302332b70f7
  inputChainToChain afad14479f477950ce6016b4647d27e7
  simplifyNots f5fab64342f7937ff3c44f38891a1c77
  stringInputChainsToStringChains c3f45fce5432833fe8b1d65faa6380ed
import  -/  IptablesTypes 13c87bb014ba33d025b93f6e4659f089
  exports: 2abc8708d65a1f1004f1c63350f29dad
import  -/  ParseSpecificationLanguage b31339ee762e54e69a2f46fc85314850
  exports: 18b78b5e45df71d295885bec234dff07
  lexer 77c583e36e586e5038c1f8ebe9f4eeb6
  parse d7a646f3f6be88dcf8ac67cb7b71b8d4
import  -/  Types 04c5d15b9d7273cc2ee1e20f9be4a3ba
  exports: fd7624f994dcfddcd82d0e50111df34c
  And 5195d3774cf1942d5e58caa42d70af54
  InC 3539351cc3e190855338110f4e6790ab
  InCNot 8ff5abb66a695df32bcc8089f70a3b3c
  InputChain 604fe6ea09318eb2a8b668748af252eb
  Or de825078084cdb216f3a58cabf01cca3
  Port d7bc2cb09990c77f5ec8875ceaee31f7
  Protocol 29c2a667093165aebd30cf9c8335414a
import  -/  process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ:System.Process 94dea86d30f5fa7449c1f8b584f7e1f2
import  -/  process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ:System.Process.Internals a666eb8eec5dfb92a4a28b4ddc0e35b2
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split 487cc1966f0f25916f1ba58bdff4b0ee
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split.Internals ec8cf5264ec78ab060cadb7ee5b994f0
b84285e2ade8a0fed23b426a4185d935
  $s$fShow(,)_$cshow3 ::
    [Types.GenRule Types.Criteria] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ eta :: [Types.GenRule Types.Criteria]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (Types.GenRule Types.Criteria)
                   Main.$s$fShow(,)_$cshow4
                   eta
                   eta1) -}
ee7bdda0ddebad7039407dafb8dacdaf
  $s$fShow(,)_$cshow4 ::
    Types.GenRule Types.Criteria -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w2 :: Types.GenRule Types.Criteria ->
                 case w2 of ww2 { Types.Rule ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec1
                   @ Types.Criteria
                   Types.$fShowCriteria
                   0
                   ww3
                   ww4
                   ww5 }) -}
f2e4eeecf56551ab6541f893c65983e0
  $s$fShowGenRule2 ::
    Types.GenRule Types.InputCriteria -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w2 :: Types.GenRule Types.InputCriteria ->
                 case w2 of ww2 { Types.Rule ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec1
                   @ Types.InputCriteria
                   Types.$fShowInputCriteria
                   0
                   ww3
                   ww4
                   ww5 }) -}
7b0b71b671f53f3fcb282dcb3e5d0f06
  $slookup1 ::
    [GHC.Types.Char]
    -> Data.Map.Base.Map [GHC.Types.Char] a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
de09192fe83d7d0e8538731ca8d60e0b
  callSMTSolver ::
    GHC.IO.FilePath -> GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.callSMTSolver1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Base.String>_R)) -}
69268966c62c516a91c3c5604650edc8
  callSMTSolver1 ::
    GHC.IO.FilePath
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ f :: GHC.IO.FilePath
                   s :: GHC.Base.String
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.IO.writeFile1 f s eta of ds1 { (#,#) ipv ipv1 ->
                 case System.Process.Internals.$wa
                        System.Process.createProcess3
                        Main.callSMTSolver3
                        (GHC.Base.Nothing @ GHC.IO.FilePath)
                        (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                        System.Process.Internals.Inherit
                        System.Process.Internals.CreatePipe
                        System.Process.Internals.Inherit
                        GHC.Types.False
                        GHC.Types.False
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case System.Process.createProcess2
                        System.Process.Internals.Inherit
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case System.Process.createProcess2
                        System.Process.Internals.CreatePipe
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case System.Process.createProcess2
                        System.Process.Internals.Inherit
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case ipv3 of wild { (,,,) ds ds6 ds7 ds8 ->
                 case ds6 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.IO.failIO1 @ GHC.Base.String Main.callSMTSolver2 ipv8
                   GHC.Base.Just hout
                   -> GHC.IO.Handle.Text.hGetContents1 hout ipv8 } } } } } } }) -}
6e0ea7d424ff2ae3abedd78c396929fa
  callSMTSolver2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Main.hs:124:9-28"#) -}
f412b988b0a108caacbed6f14a966e71
  callSMTSolver3 :: System.Process.Internals.CmdSpec
  {- Strictness: m2,
     Unfolding: (System.Process.Internals.RawCommand
                   Main.callSMTSolver6
                   Main.callSMTSolver4) -}
ce0b99c5d6319b7e77d332df5111a525
  callSMTSolver4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.callSMTSolver5
                   (GHC.Types.[] @ GHC.Base.String)) -}
0806bb0488e669094dea53ddff7fe3cb
  callSMTSolver5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "temp.smt2"#) -}
60bb80a7e1961fbf48550750a724094d
  callSMTSolver6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "z3"#) -}
a03017ff705785e4761c30bba6e67c18
  convertScript ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String Types.InputChain
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ coms :: GHC.Base.String ->
                 ConvertCommandsToChains.convertToChains
                   (GHC.Base.map
                      @ (GHC.Base.String, GHC.Types.Int)
                      @ IptablesTypes.Line
                      Main.convertScript16
                      (Main.subBashVariables
                         (Main.convertScript_go
                            (Data.OldList.lines coms)
                            Main.convertScript15)
                         Main.convertScript11))
                   Main.convertScript1) -}
12c0b37eb9f648c28055218294890961
  convertScript1 ::
    Data.Map.Base.Map [GHC.Types.Char] [Types.InputRule]
  {- Unfolding: (ConvertIptables.$sfromList
                   @ [Types.InputRule]
                   Main.convertScript2) -}
538f1a8b2b89a2e2a580fe3382a3d8f1
  convertScript10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INPUT"#) -}
febb4ba2b8d698e40ec7060fe1060310
  convertScript11 :: [(GHC.Base.String, GHC.Base.String)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, GHC.Base.String)
                   Main.convertScript12
                   (GHC.Types.[] @ (GHC.Base.String, GHC.Base.String))) -}
f9e6f616fd6f95a83442b18b4043bd44
  convertScript12 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Main.convertScript14, Main.convertScript13)) -}
06ce851a7d060d976a4e57341481fa33
  convertScript13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iptables"#) -}
72954e2e2bf03b1e8ec1d0424b675e49
  convertScript14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/sbin/iptables"#) -}
864eb6d140d3e3eab397b5f52b340f7e
  convertScript15 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1 9223372036854775807) -}
3ac82e759a0499ccd715b64e62e32110
  convertScript16 ::
    (GHC.Base.String, GHC.Types.Int) -> IptablesTypes.Line
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: (GHC.Base.String, GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ConvertIptables.$wconvertLine
                        (Data.OldList.words ww1)
                        ww2
                        (GHC.Types.[] @ Types.ModuleFunc) of ww3 { (#,,#) ww4 ww5 ww6 ->
                 IptablesTypes.Line ww4 ww5 ww6 } }) -}
7825d232697e376d68da3ba8ff31be57
  convertScript2 :: [(GHC.Base.String, Types.InputChain)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.InputChain)
                   Main.convertScript9
                   Main.convertScript3) -}
64fc4a2fc7568ac93a46dd62115f7c87
  convertScript3 :: [(GHC.Base.String, Types.InputChain)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.InputChain)
                   Main.convertScript7
                   Main.convertScript4) -}
8275b85d4d1893cdc2d0a5a5ed6a49df
  convertScript4 :: [(GHC.Base.String, Types.InputChain)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, Types.InputChain)
                   Main.convertScript5
                   (GHC.Types.[] @ (GHC.Base.String, Types.InputChain))) -}
a069a8ff8878daf740d33ceb7db31e5f
  convertScript5 :: ([GHC.Types.Char], [Types.InputRule])
  {- Unfolding: ((Main.convertScript6,
                  GHC.Types.[] @ Types.InputRule)) -}
147fc91ccafcd004d476c3940fa07d4e
  convertScript6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FORWARD"#) -}
71d5e533c8ff335f21e0589a96518825
  convertScript7 :: ([GHC.Types.Char], [Types.InputRule])
  {- Unfolding: ((Main.convertScript8,
                  GHC.Types.[] @ Types.InputRule)) -}
6ed2d76465774cfb1bf5b3910cb594fb
  convertScript8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OUTPUT"#) -}
9864042cdef589e4dd6b8720eea81ee4
  convertScript9 :: ([GHC.Types.Char], [Types.InputRule])
  {- Unfolding: ((Main.convertScript10,
                  GHC.Types.[] @ Types.InputRule)) -}
9dd08bf23f68e775510ce35e9ac90607
  convertScript_go ::
    [[GHC.Types.Char]]
    -> [GHC.Types.Int] -> [([GHC.Types.Char], GHC.Types.Int)]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
ee6590a2ab0ffaa5074d93f2d3fc4c03
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e3bd864fe81295cabb6b36ca45539f6f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
20688fff09df92565d9be8c5f0313411
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
4ecf14c73b0c14c1ea96b7a160c8c440
  subBashVariables ::
    [(GHC.Base.String, GHC.Types.Int)]
    -> [(GHC.Base.String, GHC.Base.String)]
    -> [(GHC.Base.String, GHC.Types.Int)]
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

