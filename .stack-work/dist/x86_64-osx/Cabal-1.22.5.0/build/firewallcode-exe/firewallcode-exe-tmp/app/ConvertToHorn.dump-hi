
==================== FINAL INTERFACE ====================
2016-08-05 14:59:04.152481 UTC

interface main@main:ConvertToHorn 7103
  interface hash: 2fff55b2529ea250383c37797b4e5ad5
  ABI hash: caf67f9f86b0d98eaa74200c36b730fa
  export-list hash: 76cec1257792e94428092746d96d37c3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertToHorn.condenseAnd
  ConvertToHorn.condenseOr
  ConvertToHorn.eliminateOr
  ConvertToHorn.inputChainToChain
  ConvertToHorn.inputCriteriaToCriteria
  ConvertToHorn.inputInstructionsToInstructions
  ConvertToHorn.simplifyNots
  ConvertToHorn.stringInputChainsToStringChains
module dependencies: Types
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Types 07deaa85949e0404125659b7da182fb1
  exports: 308a8e9ef15b1d0368eef76fcb360a92
  And 8afdac4ea0cf3b806d2949674630f53e
  Chain a954734d411b95e71008d4bd63a0bf9c
  Criteria b2ef1250414b0e6b2678227af251a7bc
  InC b3987076ee8049ca72efdfca87e93bc5
  InCNot 70b651bc9f4bbd6d1338f64e0f05b4b9
  InputChain 61656592a170ba4fe508239cd6d9a737
  InputCriteria b903a15d973ba0103b2f1204aea183b5
  InputInstruction 742102be34dfed881af0ccc1ec2c73bd
  InputRule b903a15d973ba0103b2f1204aea183b5
  Instruction 22b3118110d2b02c123d9d7575252b68
  NoInstruction ce8140d8381d1bdf0643cc19c1dfff82
  Not 4c108d6b8d28d69ef551773a5b7fd604
  Or 22d779d7e8a99d2b47a64b386e4698bb
  PropVariableTarget d7cace759dc39a5f0c0dafff9f565d03
  Rule 8d9cf447e21b08fbe9de4980b6719bce
  Rule b7a57192466400c3b9b745252e020d44
  ToChainNamed 9b01eacb4b32e9bb84585005ccde771b
  criteria 9e1415da147b27a484efb51d5dca829c
  isStateless 53995f1489dc18638f3eb6d604cba960
  targets 56ea84577ec4f878c135413eaae475c5
1c554bb2e6c68af88f94feecdd164cad
  $weliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
7aa08cdbcec5a7545d0dca1819775e7f
  $winputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
c3e26317c5052d2a6f0523082145bdbf
  condenseAnd :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
12498e7731ab7ef4bc9e365e2f7b907d
  condenseOr :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
28975ee97ea99fe47cc7a4a8c277ad0d
  eliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$weliminateOr w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
bf78ba0c9ba123a1f51853b472e9cdcb
  inputChainToChain ::
    [Types.InputRule] -> GHC.Types.Int -> [Types.Rule]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
292a5a17fb2e01acb831cefa4bbcb0ea
  inputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$winputCriteriaToCriteria
                        w
                        w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
00435aaa9165a9531edbcc497dd914ea
  inputInstructionsToInstructions ::
    [Types.InputInstruction] -> GHC.Types.Int -> [Types.Instruction]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
fe9ef1cdab99abb2a2e20cd408690b15
  simplifyNots :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
84e45d4aa1455eb59718396e329ab983
  stringInputChainsToStringChains ::
    [(GHC.Base.String, Types.InputChain)]
    -> GHC.Types.Int -> [(GHC.Base.String, Types.Chain)]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

