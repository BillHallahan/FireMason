
==================== FINAL INTERFACE ====================
2016-08-11 00:33:26.902268 UTC

interface main@main:ConvertToHorn 7103
  interface hash: afea733aeb1316c5aba2111be099ec40
  ABI hash: 08af6114e66cc4fe3386d6c49df74b2e
  export-list hash: 76cec1257792e94428092746d96d37c3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertToHorn.condenseAnd
  ConvertToHorn.condenseOr
  ConvertToHorn.eliminateOr
  ConvertToHorn.inputChainToChain
  ConvertToHorn.inputCriteriaToCriteria
  ConvertToHorn.inputInstructionsToInstructions
  ConvertToHorn.simplifyNots
  ConvertToHorn.stringInputChainsToStringChains
module dependencies: Types
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Types 22400a5faae8b7e0ddaf8e819accc2b5
  exports: 543a62a9d1b1c5a4ade5b8a7472fb031
  And 6f9bf0163ff27e2a03199030eb3d0445
  Chain ca4dfb51f2b7cc7fafbf4845e3e2a14f
  Criteria 78201c2df366762ffa256db3fa879d5e
  InC 6c0d1368639dd5a4ac0527e46326621f
  InCNot b117f7befd6efbd09704f41fc25cc327
  InputChain 6388ac567b47558966f1197d75c5e1c3
  InputCriteria e40faf9184c5e56de440c7debe74a4a8
  InputInstruction 59fc02937cc01a8a91bd460221924af6
  InputRule e40faf9184c5e56de440c7debe74a4a8
  Instruction 90e65e2dfea234f40917867645605383
  NoInstruction b969e22921f283e869a0720ab3777dec
  Not c51190b692ad0139f0c5c973f7d65e98
  Or d0cd109da857d4a68fc590655040fcf8
  PropVariableTarget d7cace759dc39a5f0c0dafff9f565d03
  Rule 2df5292164aa863af871847a92afc898
  Rule 4d0f6eb3092e6e02df1b61348eb8fdee
  ToChainNamed ce4c7bf5b328004ab15754446244f326
  criteria e73f0ec970096c1c807e629c9074593d
  isStateless f99c04127b8f0fece461c4f1a93e4834
  label 662cde7fa163f597123a90cbed5ff308
  targets 3a1999badf380f23aac258a2bf76a66a
abd7117e6961c1c428d53e4c4b7c8a82
  $weliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
b1f9cf95bf605587a07f9d24891e2ab8
  $winputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
1137c3f6f58542ca8b6dcd6a24dfca99
  condenseAnd :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
68bf0aca1f140309bdb45b7eb624ff2a
  condenseOr :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
84a7f62fefa8dee99707cc71d152efa7
  eliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$weliminateOr w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
4ee572b0f14059e98fbfcf44f6e8e5b4
  inputChainToChain ::
    [Types.InputRule] -> GHC.Types.Int -> [Types.Rule]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
8566b9f769313bcf4cdc39af3328db6a
  inputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$winputCriteriaToCriteria
                        w
                        w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
bfe5209af3c0087af8a8b68040f8b475
  inputInstructionsToInstructions ::
    [Types.InputInstruction] -> GHC.Types.Int -> [Types.Instruction]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
75518cf002a7a1bd28541f0f995fe0b8
  simplifyNots :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
9680b29690fe9651196f3e2944d7afbd
  stringInputChainsToStringChains ::
    [(GHC.Base.String, Types.InputChain)]
    -> GHC.Types.Int -> [(GHC.Base.String, Types.Chain)]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

