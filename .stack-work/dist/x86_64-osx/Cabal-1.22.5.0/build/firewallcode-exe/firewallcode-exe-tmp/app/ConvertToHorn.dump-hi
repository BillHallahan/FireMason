
==================== FINAL INTERFACE ====================
2016-08-13 01:58:53.929865 UTC

interface main@main:ConvertToHorn 7103
  interface hash: 2c8d0ff262a6d5e7bbda19e59bdbd5d4
  ABI hash: 01a2d23cc80a6e9f06083edbc0aeaa55
  export-list hash: 76cec1257792e94428092746d96d37c3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertToHorn.condenseAnd
  ConvertToHorn.condenseOr
  ConvertToHorn.eliminateOr
  ConvertToHorn.inputChainToChain
  ConvertToHorn.inputCriteriaToCriteria
  ConvertToHorn.inputInstructionsToInstructions
  ConvertToHorn.simplifyNots
  ConvertToHorn.stringInputChainsToStringChains
module dependencies: Types
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Types 8e5d6bf8bd4e68da2c2990dcc945144b
  exports: 8b870742f535852668b544f1c644b52e
  And 462e7af6e1a38042999c87a052bbbdb4
  Chain 7fe252100536b1dde81007f7021906c4
  Criteria 605b90b34d99bcf3227a69e454b38e17
  InC 19186063fbb3a12a9ae731fd8bf141b4
  InCNot 2734d64d652b8f8a350b9406bb36c8a3
  InputChain 1ae31733f7e7855d0d9d84c7306d600b
  InputCriteria fcfc4741580d1c060e62298e2fd0e121
  InputInstruction 1358d8863b96a39d7813053aaaf956e0
  InputRule fcfc4741580d1c060e62298e2fd0e121
  Instruction 1d8db10fc22bb8af140c62e812849076
  NoInstruction b969e22921f283e869a0720ab3777dec
  Not b8339c1be2f1b9a12b2b3eb568593726
  Or 9a97b4a2f3956274e5d8aa7dd013894d
  PropVariableTarget 0d426fbf13365d0e1673894ebe38b0a2
  Rule 6664d15e2c4eb242c5746c483f2eae4f
  Rule 58833ff10314ee54807ea6dd5e748524
  ToChainNamed ce4c7bf5b328004ab15754446244f326
  criteria 7bbfe7454258bffec8dcff73bff88073
  isStateless bfdd7c167c8448b682e3e1e7c031b7ff
  label 2ed2a5bcb6d1dd562fbd4c9ce09e9c09
  targets 3abe713ecb24e9d24b96a6af1d80bc91
2942cfdd505e903b6cb9070cbb615c7c
  $weliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
aaa2b6170d42db6c5615e1be9ddafb45
  $winputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
2604c8ca143130aa14522ae03991c48a
  condenseAnd :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
dcc29fd6c915cecb2d0b2524ed62047f
  condenseOr :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
aa4f52cc5b0f978083e2c5a95d137c07
  eliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$weliminateOr w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
28ba04c6b93dab3d197f14855aa13288
  inputChainToChain ::
    [Types.InputRule] -> GHC.Types.Int -> [Types.Rule]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
7bd77487c6e244839ef375595052e88c
  inputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$winputCriteriaToCriteria
                        w
                        w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
018b3274104fa8787cd18ca2e479c212
  inputInstructionsToInstructions ::
    [Types.InputInstruction] -> GHC.Types.Int -> [Types.Instruction]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
0de3ef518fc03e871281a5dd0a1a86e9
  simplifyNots :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
8fa9c256ad8751805a4ec3e9703c8085
  stringInputChainsToStringChains ::
    [(GHC.Base.String, Types.InputChain)]
    -> GHC.Types.Int -> [(GHC.Base.String, Types.Chain)]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

