
==================== FINAL INTERFACE ====================
2016-08-14 06:06:47.637675 UTC

interface main@main:ConvertToHorn 7103
  interface hash: a9f95f9629a03729217ddcfceadc85ab
  ABI hash: 887673dfb978e54bd516825c3a0d813d
  export-list hash: 76cec1257792e94428092746d96d37c3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertToHorn.condenseAnd
  ConvertToHorn.condenseOr
  ConvertToHorn.eliminateOr
  ConvertToHorn.inputChainToChain
  ConvertToHorn.inputCriteriaToCriteria
  ConvertToHorn.inputInstructionsToInstructions
  ConvertToHorn.simplifyNots
  ConvertToHorn.stringInputChainsToStringChains
module dependencies: Types
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Types f9d70ed3014642084f474e454b622672
  exports: e4d4ad03c66c3c72a69f0ac142d16980
  And a6b1a400ff03e25bd2ea45d5e2395971
  Chain 0e120b9c2c102af49c408de3f34c7e02
  Criteria 605b90b34d99bcf3227a69e454b38e17
  InC 167f1b4bcb643ccf274e9d26ea7a448c
  InCNot d881fe64bc369e8f080c98057df7ba82
  InputChain 10cac473e2a33533448862ba0c864076
  InputCriteria 20dcf4ddc51ba42a4587cc8f11b9aa2b
  InputInstruction 9dc3d684f035bcef65ffe10c57ac74e0
  InputRule 20dcf4ddc51ba42a4587cc8f11b9aa2b
  Instruction 2900f5c830d7065875246a9f07356315
  NoInstruction b969e22921f283e869a0720ab3777dec
  Not b8339c1be2f1b9a12b2b3eb568593726
  Or bd3f969ef39d92545dfe2b3ac0514caf
  PropVariableTarget 6ba064c034dcec2f01702f62123a9e00
  Rule 95058641645bebda06940fa02ddae755
  Rule 1aebbd36180eb17bdf58771ca1b3fa66
  ToChainNamed ce4c7bf5b328004ab15754446244f326
  criteria ff3925ad873ce668f9efdb86ed058d69
  isStateless bfdd7c167c8448b682e3e1e7c031b7ff
  label d9bf4817729bf4fdebdef723e92c42f0
  targets 31b85ba6f40b98718422f8d61c350c85
05605750fc800104e1ef6917ab6987bd
  $weliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
010ee16753bc22d1533f69928b6b547c
  $winputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
f70d3fbe42ef4d110e83e36eeb67d15f
  condenseAnd :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
5c263e66be9fcbba5dd2c64fe8680eeb
  condenseOr :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
7b312f87641c49ab4b2f493f3ba4c03f
  eliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$weliminateOr w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
98357fc6b62cf01aa0fc9fa52510cadd
  inputChainToChain ::
    [Types.InputRule] -> GHC.Types.Int -> [Types.Rule]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
3c6b875755b8bb24cc726c7671c4da99
  inputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$winputCriteriaToCriteria
                        w
                        w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
927e2d326653c26370eb751ac149bf00
  inputInstructionsToInstructions ::
    [Types.InputInstruction] -> GHC.Types.Int -> [Types.Instruction]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
24481a2b812a350056bdcd6b9a625faf
  simplifyNots :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
7ed078981459267f8e090167ef6fb182
  stringInputChainsToStringChains ::
    [(GHC.Base.String, Types.InputChain)]
    -> GHC.Types.Int -> [(GHC.Base.String, Types.Chain)]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

