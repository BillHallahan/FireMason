
==================== FINAL INTERFACE ====================
2016-08-09 23:46:36.960301 UTC

interface main@main:ConvertToHorn 7103
  interface hash: bab33871298ea38c8ff589814fc04541
  ABI hash: 0e545718d88d4d573d9f076057a00c0d
  export-list hash: 76cec1257792e94428092746d96d37c3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertToHorn.condenseAnd
  ConvertToHorn.condenseOr
  ConvertToHorn.eliminateOr
  ConvertToHorn.inputChainToChain
  ConvertToHorn.inputCriteriaToCriteria
  ConvertToHorn.inputInstructionsToInstructions
  ConvertToHorn.simplifyNots
  ConvertToHorn.stringInputChainsToStringChains
module dependencies: Types
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Types 40fb64e93a610ce366a87f59754aaa8a
  exports: c5dd2fdaee99eeddeac00fda32d7be65
  And 1526cf25b9e668a513750436198cf7e3
  Chain fdabad52d3e9945bd1fdc190af510a61
  Criteria b2ef1250414b0e6b2678227af251a7bc
  InC ca414675e42f6754bbee047036866a93
  InCNot 42ee94f6f0d9d978a2b36241f9607918
  InputChain 31059d85e8c35722c4471f94f09b42f4
  InputCriteria 733cf780d3e0b5680c71bad8be1de495
  InputInstruction 8e6134ff87a0790eabc3ebb79ca0f0ec
  InputRule 733cf780d3e0b5680c71bad8be1de495
  Instruction e117c4b6bc059e4f4046a003b87006df
  NoInstruction bcfc97517d474a6b26424762dfabc11c
  Not 4c108d6b8d28d69ef551773a5b7fd604
  Or 9bca2586b526319e1cbbbafedd71f99b
  PropVariableTarget d7cace759dc39a5f0c0dafff9f565d03
  Rule 9482d4c7de3ec7cf655ed4494ac94a4c
  Rule 709e69aef0024dfd7fca01b519b8602d
  ToChainNamed ea493aef46203cbc163776b21cb24404
  criteria 688a2ae712a56f16d00b8fab86921db7
  isStateless 53995f1489dc18638f3eb6d604cba960
  label 4cdd83b4363dab9de270c2fbfa3bd4b9
  targets a8abd9dc3ae8891ba9d35052418c63f0
bd79e48f314719cef351bf268ea93084
  $weliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
d348fb70a2027034e16af4f39a757668
  $winputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> (# [[Types.Criteria]], [Types.Rule], GHC.Types.Int #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
c1fcdda79945d71344ba394ca9cb7195
  condenseAnd :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
5ad8195c0f2865d8c6c6c742da8e055c
  condenseOr :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f8bf9141c3920ef52c24e72392ef20c9
  eliminateOr ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$weliminateOr w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
6ca4a7dbfece2cb21bf3cf90648c64fe
  inputChainToChain ::
    [Types.InputRule] -> GHC.Types.Int -> [Types.Rule]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
82ebc29f2e7309faafabea6faebbb956
  inputCriteriaToCriteria ::
    [Types.InputCriteria]
    -> GHC.Types.Int
    -> ([[Types.Criteria]], [Types.Rule], GHC.Types.Int)
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.InputCriteria] w1 :: GHC.Types.Int ->
                 case ConvertToHorn.$winputCriteriaToCriteria
                        w
                        w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
24b531c94878591d7e2317d7c2eb8021
  inputInstructionsToInstructions ::
    [Types.InputInstruction] -> GHC.Types.Int -> [Types.Instruction]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
d966d30e838e3bae42daf5131e0a2147
  simplifyNots :: [Types.InputCriteria] -> [Types.InputCriteria]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
b89287a8140c57b0dd58bad546f15a87
  stringInputChainsToStringChains ::
    [(GHC.Base.String, Types.InputChain)]
    -> GHC.Types.Int -> [(GHC.Base.String, Types.Chain)]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

