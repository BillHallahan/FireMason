
==================== FINAL INTERFACE ====================
2016-08-29 20:44:32.926217 UTC

interface main@main:RuleAdding 7103
  interface hash: 04758be4486fa9e2ffdc81e36d41ab76
  ABI hash: 9ca01fca1b7f8ab5789603b5623aa644
  export-list hash: 5b724a0daca5fb7dcd46e4c4c60a6c50
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  RuleAdding.addRuleToChainAtPos
  RuleAdding.findBestPointCut
  RuleAdding.findBestPointCut'
  RuleAdding.findPointCut
  RuleAdding.instructionsToAddAtPos
  RuleAdding.scm
  RuleAdding.scoreCriteria
  RuleAdding.scoreCriteriaList
  RuleAdding.scoreRules
  RuleAdding.scoreTargets
module dependencies: ChainsToSMT2 NameIdChain ParserHelp SMT Types
package dependencies: MissingH-1.3.0.2@Missi_0LYz2ExiF1QEfGgduKzSaZ
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_8qjMvUrztuXBu8a9xaKGpv
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      regex-compat-0.95.1@regex_EyUO1k1s8YNJ81jSdgVW1z
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tostring-0.2.1.1@tostr_H9ILO1H59wL709TBIbtvyy
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      z3-4.1.0@z3_IihW0G4lPF9JXAMQOHqRN1
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         main@main:Types
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Ord 66127262fc269c8a61d7d87ba94bd4d2
import  -/  base-4.8.2.0:Debug.Trace 6660afb6094d69397ea084364da8f950
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Enum debc6de3086023a15993ab0cecffb90b
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0899686bfc1d9ef72dff3de85e99862a
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map bf7758bd12b23a367777a33fd16e39de
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  ChainsToSMT2 a7909c6c5613c637ca868e8f8dd4ccdf
  exports: 3b49f3851e5ce09538b9d9a618458298
  convertChainsCheckSMT c6f478e58a3c022eab1dc50a88ded37d
  toSMT 2fc2040f0742bf1902cb1a1dc48250b2
import  -/  NameIdChain 3329096891117c78fb869b82591be959
  exports: abd57aa56b3922888fa8fd9dffdfa1d9
  IdNameChain 4a390623d655b4c8df7fe2d184e86fe0
  addChain a12e35585d2ac97bff5c6a861b9a86dd
  chains f9b316c75313dacf636869e52a2c4a8e
  idsWithName c1d269777dd47944ede21497eafed8de
  increaseIndexes b8271d4ede087b83b7a0d7d5d332f766
  jumpedToWithCriteria 2bc7baa34e33070a74f3d20d570dd9db
  lookupChain 390427c8a8491942c527aec29c61dd2f
  lookupName 1fbae789eacca65488ec3c427f9aae8c
  lookupNameChain e6b928b947423eeb51c99387683fb180
  maxId 605641b87a27a04f26a9fcaa78987c51
  maxLabel e0d381dc6dcfe21fa5f76f99560d6775
  reduceReferenced 3dc574f32573221d1e078d05ca7fb83f
  setUnion ae92f24283a59492ee262240e2af8e72
  switchChains f107ed759b657bff535584c55997a1e5
  topLevelJumpingTo 747ed3e11a6585cbbbb92439f0314d51
import  -/  SMT c41b7464359db2df4f4b070fa3ed3edc
  exports: f0323f17d5b754a19fed6a0e8267a257
  Assert f9c06f165f0d7078827b0a6417121cb2
  DeclareConst 4c8f0e4ca1531c24afc6cba11283e159
  Implies 4adbdffb6fb0123c33da22db801c1139
  Reaches d1d55a7318c099a8e655eaa3e1417a6c
  SMTAnd caa63e731babf5467d6d1d0ae5c9efdf
  SMTEq 1685fc83606d403b978092753dd64e73
  SMTF2 282c7bcc3b94723cfdc6ab918cddda80
  SMTF3 cfd43abffa53055e90a5aa643c11c215
  SMTInt 3a9060e7b3eb28b39a6a5e757bf49b8c
  SMTNot 2973b8256f925b6023af813438298509
  SMTOr 7e788ee7940765d59282f24c364fe35b
  SMTString 2318a10c0f240f1a156fc3c06b9f5e29
  TerminatesWith 5344f7eb693271ff20162f14d2048228
  checkSat 952aca761848002e809fc3d450c6083f
import  -/  Types 8f9f9ef24d7a230d4a5552d2b301ad89
  exports: f5f85a5f38b612d4f86997d2d16e8581
  Chain f622755934dc74ff66920eb81ffc2ab3
  ChainId c884b4bd8354c5f5ad5e611c0e6a2eb5
  Criteria 605b90b34d99bcf3227a69e454b38e17
  Instruction bd35d147b29bae47971901d59d22e80a
  Not b8339c1be2f1b9a12b2b3eb568593726
  Port 0cdcd795ebd2c331c1401f6cf3404c99
  Protocol d38fdc887d9a0e7c53d19d8b463500f3
  Rule 9ae32ffd9c10aaf03a215476f23bb135
  Rule 548f61072f1710c958131698bb5af20d
  Target 97fc31d3ca68602965fcc27b6e7cac76
  chainName 8821439aec3279dd9572bf6c8c110567
  criteria e5383ca046acd5a1a5f5127b02fb6d9b
  insRule 8e138eb267aaea8894463ffcac20987b
  label 4604741f61117d474e29c2026b5e5431
  targets 34a81528b05ae13a544c199117032a76
import  -/  tostring-0.2.1.1@tostr_H9ILO1H59wL709TBIbtvyy:Data.String.ToString f26ed1712f18acd23f20c0cf04363f67
3f891ecd291e8d06c7faafcb9a2fd929
  $s$fShowGenRule2 :: Types.GenRule Types.Criteria -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w2 :: Types.GenRule Types.Criteria ->
                 case w2 of ww2 { Types.Rule ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec2
                   @ Types.Criteria
                   Types.$fShowCriteria
                   0
                   ww3
                   ww4
                   ww5 }) -}
2a4dea743a1a3bb32a66643088164171
  $waddRuleToChainAtPos ::
    Types.Rule
    -> Types.Chain -> GHC.Prim.Int# -> [Types.GenRule Types.Criteria]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ w :: Types.Rule
                   w1 :: Types.Chain
                   ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww 0) of wild1 {
                   GHC.Types.False
                   -> case w1 of wild {
                        []
                        -> GHC.Base.++
                             @ (Types.GenRule Types.Criteria)
                             (GHC.Types.[] @ Types.Rule)
                             (GHC.Types.: @ Types.Rule w (GHC.Types.[] @ Types.Rule))
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([Types.Rule], [Types.Rule])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ Types.Rule
                                           (GHC.Prim.-# ds1 1)
                                           ipv1 of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                GHC.Base.++
                                  @ (Types.GenRule Types.Criteria)
                                  (GHC.Types.:
                                     @ Types.Rule
                                     ipv
                                     (case ds2 of wild2 { (,) xs' xs'' -> xs' }))
                                  (GHC.Types.:
                                     @ Types.Rule
                                     w
                                     (case ds2 of wild2 { (,) xs' xs'' -> xs'' }))
                             1
                             -> GHC.Base.++
                                  @ (Types.GenRule Types.Criteria)
                                  (GHC.Types.: @ Types.Rule ipv (GHC.Types.[] @ Types.Rule))
                                  (GHC.Types.: @ Types.Rule w ipv1) } }
                   GHC.Types.True
                   -> GHC.Base.++
                        @ (Types.GenRule Types.Criteria)
                        (GHC.Types.[] @ Types.Rule)
                        (GHC.Types.: @ Types.Rule w w1) }) -}
ff9754bd748d7e4a9fd151eb58e58021
  $wscoreCriteria ::
    Types.Criteria -> Types.Criteria -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0] -}
f222fdd577a45a78a872a0fe7b4ba007
  $wscoreCriteriaList ::
    [Types.Criteria] -> [Types.Criteria] -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0] -}
a44709392ddc4f69880e71832abd85bd
  $wscoreTargets :: [Types.Target] -> [Types.Target] -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0] -}
bb916d1f3350abc44e4a3e2df3285eda
  addRuleToChainAtPos ::
    Types.Rule -> Types.Chain -> GHC.Types.Int -> Types.Chain
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: Types.Rule w1 :: Types.Chain w2 :: GHC.Types.Int ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 RuleAdding.$waddRuleToChainAtPos w w1 ww1 }) -}
57f63b778c8e1ce10c8e91ac08aebc34
  findBestPointCut ::
    Types.Rule
    -> Types.ChainId
    -> NameIdChain.IdNameChain
    -> GHC.Types.IO (Types.ChainId, GHC.Types.Int)
  {- Arity: 4,
     Strictness: <L,U(U,U,U(U))><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                RuleAdding.findBestPointCut1
                  `cast`
                (<Types.Rule>_R
                 ->_R <Types.ChainId>_R
                 ->_R <NameIdChain.IdNameChain>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <(Types.ChainId, GHC.Types.Int)>_R)) -}
6b89d6c7dc3db018a79f59c18b88d480
  findBestPointCut' ::
    Types.Rule
    -> Types.ChainId
    -> NameIdChain.IdNameChain
    -> NameIdChain.IdNameChain
    -> GHC.Types.IO (Types.ChainId, GHC.Types.Int)
  {- Arity: 5,
     Strictness: <L,U(U,U,U(U))><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U,U)><L,U(A,A,C(U),A,A,1*C1(C1(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U))),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (0, True, True)
                RuleAdding.findBestPointCut2
                  `cast`
                (<Types.Rule>_R
                 ->_R <Types.ChainId>_R
                 ->_R <NameIdChain.IdNameChain>_R
                 ->_R <NameIdChain.IdNameChain>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <(Types.ChainId, GHC.Types.Int)>_R)) -}
82879dabaddcefd6db94ce27e0cdf349
  findBestPointCut1 ::
    Types.Rule
    -> Types.ChainId
    -> NameIdChain.IdNameChain
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Types.ChainId, GHC.Types.Int) #)
  {- Arity: 4,
     Strictness: <L,U(U,U,U(U))><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ r :: Types.Rule
                   i :: Types.ChainId
                   n :: NameIdChain.IdNameChain
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 RuleAdding.findBestPointCut2 r i n n eta) -}
02d6e5f0e05c4cc65c241bbea6d6c109
  findBestPointCut2 ::
    Types.Rule
    -> Types.ChainId
    -> NameIdChain.IdNameChain
    -> NameIdChain.IdNameChain
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Types.ChainId, GHC.Types.Int) #)
  {- Arity: 5,
     Strictness: <L,U(U,U,U(U))><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U,U)><L,U(A,A,C(U),A,A,1*C1(C1(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U))),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U> -}
5b5e3ca5e7f0f187d6a703332ce3e59a
  findPointCut ::
    Types.Rule
    -> Types.ChainId
    -> NameIdChain.IdNameChain
    -> (Types.ChainId, GHC.Types.Int, GHC.Types.Int)
  {- Arity: 3,
     Strictness: <L,U(U,U,U(U))><L,U><L,U(A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)> -}
20d71a1f004c2f7f2fd46ca28f87f251
  instructionsToAddAtPos ::
    [Types.Instruction]
    -> NameIdChain.IdNameChain
    -> GHC.Types.IO [(Types.Rule, GHC.Base.String, GHC.Types.Int)]
  {- Arity: 3,
     Strictness: <S,1*U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                RuleAdding.instructionsToAddAtPos1
                  `cast`
                (<[Types.Instruction]>_R
                 ->_R <NameIdChain.IdNameChain>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <[(Types.Rule, GHC.Base.String, GHC.Types.Int)]>_R)) -}
4ca38b276dbbcd0e7a727d1b56f0ca4f
  instructionsToAddAtPos1 ::
    [Types.Instruction]
    -> NameIdChain.IdNameChain
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Types.Rule, GHC.Base.String, GHC.Types.Int)] #)
  {- Arity: 3,
     Strictness: <S,1*U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U)><L,U> -}
d157374e39c64bd204cbd7d3b7da04ad
  scm :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100000) -}
6d4deb915663a07606c30fd0ed61552e
  scoreCriteria :: Types.Criteria -> Types.Criteria -> GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Types.Criteria w1 :: Types.Criteria ->
                 case RuleAdding.$wscoreCriteria w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
d7555902c10d47e502c469b89ecff0b0
  scoreCriteriaList ::
    [Types.Criteria] -> [Types.Criteria] -> GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.Criteria] w1 :: [Types.Criteria] ->
                 case RuleAdding.$wscoreCriteriaList w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
f5d9f88c67dd6d9f41ce3a3909f9e86b
  scoreRules :: Types.Rule -> Types.Rule -> GHC.Types.Int
  {- Arity: 2,
     Strictness: <S(SSL),1*U(1*U,1*U,A)><S(SLL),1*U(1*U,U,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Types.Rule w1 :: Types.Rule ->
                 case w of ww { Types.Rule ww1 ww2 ww3 ->
                 case w1 of ww4 { Types.Rule ww5 ww6 ww7 ->
                 case RuleAdding.$wscoreCriteriaList ww1 ww5 of ww8 { DEFAULT ->
                 case RuleAdding.$wscoreTargets ww2 ww6 of ww9 { DEFAULT ->
                 GHC.Types.I# (GHC.Prim.+# ww8 ww9) } } } }) -}
5c16110464911cc2319fe7907c47b3bd
  scoreTargets :: [Types.Target] -> [Types.Target] -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [Types.Target] w1 :: [Types.Target] ->
                 case RuleAdding.$wscoreTargets w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

