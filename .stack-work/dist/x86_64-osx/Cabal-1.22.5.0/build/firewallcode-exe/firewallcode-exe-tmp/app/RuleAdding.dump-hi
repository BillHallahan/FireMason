
==================== FINAL INTERFACE ====================
2017-03-03 16:06:51.6542 UTC

interface main@main:RuleAdding 7103
  interface hash: 3652729752344dc74150b4680460f266
  ABI hash: e9486f17065ddeb4b0cf577900608d21
  export-list hash: 4346cf51419c6bbc6bb6c89b8f08eefc
  orphan hash: bc3cac5e1c8e6b8996d09092a03a57d5
  flag hash: 97344007ccf84cb5abb832d455d4804c
  sig of: Nothing
  used TH splices: False
  where
exports:
  RuleAdding.addRulesToIdNameChain
  RuleAdding.instructionsToAddAtPos
module dependencies: ChainsToSMT NameIdChain Types
package dependencies: appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.7@casei_2hQWsf0VfQP5NW180eleos
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY
                      largeword-1.2.5@large_7BOdRtoTTTgFdsG28EDk6P
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tostring-0.2.1.1@tostr_3WKXD89KZfc5BSX8Q5dXep
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      z3-4.1.0@z3_IihW0G4lPF9JXAMQOHqRN1
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         main@main:Types
         network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw:Network.Socket
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Addr
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Range
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Ord 66127262fc269c8a61d7d87ba94bd4d2
import  -/  base-4.8.2.0:Data.Traversable 7576318f4ef8587ad947f87012b65abf
import  -/  base-4.8.2.0:Data.Word ec8deb535202352cc8b509b14004bcbd
import  -/  base-4.8.2.0:Debug.Trace 6660afb6094d69397ea084364da8f950
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Enum debc6de3086023a15993ab0cecffb90b
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:GHC.Word 10dc88543d98000abab9695a1019767d
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Strict 2e796f3ebd5f3ce783e00a01f5cdcaa8
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  largeword-1.2.5@large_7BOdRtoTTTgFdsG28EDk6P:Data.LargeWord 354f86b73f096c48c610faad64e0d6d9
import  -/  ChainsToSMT a5d09012218541d5d937a97d7a7afb79
  exports: 2fc28bf6cf78356ef3a858d4e27d894f
  acceptAST 0d7eaac37dca002c5af99f7256f70a1f
  convertChainsSMT 4b874fb54cfd3b30b8dd451e425607f4
  dropAST 31278a19cefdc7414733617e57ebff46
  enforceLimitsEqual c2fb011da49574596e8c5bb0bfc8cfe5
  enforcePacketsEqual b5a998e98fbce4a372db432fe16b95f0
  intSortList 0d3fdbb013ae61e2caf4ca4abae90abc
  limitInitial ab7e11793fb7a844496d1031974fe726
  policy 6f75ac18a5d0aeb03ca9495903321769
  reaches 75f8bb5f8e88ca1bd889806e13b7f4dc
  reachesEnd 656229e5f652e43472d893a964893e76
  terminatesWith 2555ad283fb54bed14e10c707896f095
  toSMTCriteriaList 207217778943d067f100687a3f827c90
import  -/  NameIdChain bb1168b4d2b0d8906225834699a4eaf1
  exports: 7f5e2a9988285dd65e6bffba242d2ff7
  IdNameChain aea396c43cf9aa3176f82b0a2a6a1d1a
  addChain 02d57c969a3cd084474b070f67e3947f
  addRuleToChains 425cad73f1d12c3d9ea4065fef51e7ac
  idsWithName ce3397453e99f2130d5eb8561ff09255
  increaseIds 8994c93055b97ef97fd82ff1a74c0278
  jumpedToWithCriteria 193e28208c3af6ba5d4702066f947302
  limitIds 77e6e0efc9c690dbcf59a09c3749e2ca
  lookupChain beb186531f64c001f02e2c272d9bda5b
  lookupName 819e0c9d91c3e4c2396d6d0e37a83f43
  lookupNameChain 5add9c5d1a8f587862023e2d44b31c87
  maxId a5a6f96cfb0dd2fbb007469a235aa8e4
  maxLabel e1162a2e007c589dfe418eed8a7c7040
  reduceReferenced 7a607e4081962605a496ae0aaece4b24
  setUnion f898181e183dd13b4069ce7e195e4f4d
  switchChains 99088dba690ea53253f98a40104af1cc
  toList' e68d2bdaed4e88dcd18011b9ad89192b
  topLevelJumpingTo b31270ec502a54ba503bbd82aa5ea611
  validIds 327791961625bb6c873b38abe5a91cc1
import  -/  Types 5cc88623eea062e7f6011dfd679287af
  exports: 150e5976e36f4ba67c4c37181359bbdd
  ACCEPT c3a03ad0d4498a63dd85ab66746d4eca
  ChainId c884b4bd8354c5f5ad5e611c0e6a2eb5
  Criteria cd9fa80f07dac492cd3e2abc1ff8b6ce
  IPAddress f8c5099a7237025ef3713bebfb52a514
  Instruction e8272939ad2c8b0969c48a3271151491
  Label 8ea1cbc35ff6354c4e178e365701b867
  Limit 5962206ea3870b4c24faa7effc070a30
  Not 61e60cc3636b62910d4a9b4b95695e64
  Port 73ebf9c03aa3055cd5c7eeff13e668ec
  Protocol dd6c0e897be9409b806a307928ee6cd1
  Rule 1d4b9954523d9dff99b05d967c44b033
  Rule 3dc6d62e77db94c517aa1b70e09fcbe3
  RuleInd ec4e9c89174bda268454f41b7b334f61
  Target c86273e8d5a2db581a040f85173b28c7
  ToChainNamed e2b38926c90b10dd6443e5b0cf04b4c4
  criteria b74a79f7f223d4d90fb85353a46cfd8a
  ipAddr fdbee042de6ad89db4d1b84222f17fcf
  ipToWord 6bc11b980f10dee2e61d9b0b9569787e
  label f7075d026a31f1475fa9bcc64ff2fcf1
  targets f70e06da4eb5a74e71183801cbf417b6
import  -/  tostring-0.2.1.1@tostr_3WKXD89KZfc5BSX8Q5dXep:Data.String.ToString d0991a72f1064ecb9aa2833fb0b76080
import  -/  z3-4.1.0@z3_IihW0G4lPF9JXAMQOHqRN1:Z3.Base 61b82345797cf0bb463627ba35c4d83f
import  -/  z3-4.1.0@z3_IihW0G4lPF9JXAMQOHqRN1:Z3.Monad 05f8d2c0a5ffd5e3709abba9c2736322
1aa1fc9e54f75cdb8e319dd9ba0241d5
  $s$fShow(,)2 :: [Types.GenRule Types.Criteria] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ eta :: [Types.GenRule Types.Criteria]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (Types.GenRule Types.Criteria)
                   RuleAdding.$s$fShow(,)3
                   eta
                   eta1) -}
7839c58de457162f7c5ad9e5709a4d37
  $s$fShow(,)3 :: Types.GenRule Types.Criteria -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w2 :: Types.GenRule Types.Criteria ->
                 case w2 of ww2 { Types.Rule ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec5
                   @ Types.Criteria
                   Types.$fShowCriteria
                   0
                   ww3
                   ww4
                   ww5 }) -}
eab7afd81e0ecad93cfb129b68c245b4
  $s$fShowGenRule :: GHC.Show.Show (Types.GenRule Types.Criteria)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Types.GenRule Types.Criteria)
                  (Types.$fShowGenRule_$cshowsPrec
                     @ Types.Criteria
                     Types.$fShowCriteria)
                  RuleAdding.$s$fShowGenRule1
                  RuleAdding.$s$fShow(,)2 -}
20696176358e72431e6ddb3d8c9f6747
  $s$fShowGenRule1 :: Types.GenRule Types.Criteria -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Types.GenRule Types.Criteria ->
                 case x of ww2 { Types.Rule ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec5
                   @ Types.Criteria
                   Types.$fShowCriteria
                   0
                   ww3
                   ww4
                   ww5
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
b17c9ee6f6d7d811c287aa3774e5750a
  $s^1 :: GHC.Types.Int
  {- Strictness: b -}
7f719fd47019429dc85207b765143867
  $s^2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
eebbae05f40cd7f3a61437b030c77e8a
  $w$s^ :: GHC.Types.Int -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Types.Int w1 :: GHC.Integer.Type.Integer ->
                 case GHC.Integer.Type.ltInteger#
                        w1
                        RuleAdding.$s^2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.eqInteger#
                             w1
                             RuleAdding.$s^2 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False
                        -> case w of ww { GHC.Types.I# ww1 -> RuleAdding.$wf ww1 w1 }
                        GHC.Types.True -> 1 } }
                   GHC.Types.True
                   -> case RuleAdding.$s^1 ret_ty GHC.Prim.Int# of {} } }) -}
86124a2eb237efac4320be837f22d8c8
  $waddRulesToIdNameChain ::
    [(Types.Rule, GHC.Base.String, Types.Label)]
    -> (GHC.Base.String -> NameIdChain.IdNameChainType Types.Rule)
    -> (Types.Rule -> Types.Rule)
    -> (Types.ChainId
        -> GHC.Base.Maybe (GHC.Base.String, [Types.Rule]))
    -> (Types.ChainId -> GHC.Base.Maybe [Types.Rule])
    -> (Types.ChainId -> Types.RuleInd -> GHC.Base.Maybe Types.Rule)
    -> [(Types.ChainId, Types.RuleInd)]
    -> (Types.ChainId -> GHC.Base.Maybe GHC.Base.String)
    -> (Types.ChainId -> [Types.ChainId])
    -> [[Types.ChainId]]
    -> (([Types.Rule] -> [Types.Rule])
        -> Types.ChainId -> NameIdChain.IdNameChainType Types.Rule)
    -> (Types.Rule
        -> Types.ChainId
        -> Types.RuleInd
        -> NameIdChain.IdNameChainType Types.Rule)
    -> [[Types.Rule]]
    -> [GHC.Base.String]
    -> [(GHC.Base.String, [Types.Rule])]
    -> [Types.ChainId]
    -> (GHC.Base.String -> [Types.ChainId])
    -> (GHC.Types.Int -> NameIdChain.IdNameChain)
    -> ([Types.ChainId] -> NameIdChain.IdNameChainType Types.Rule)
    -> [Types.ChainId]
    -> [Types.ChainId]
    -> ([Types.ChainId] -> [Types.ChainId])
    -> (GHC.Types.Int
        -> GHC.Base.Maybe [(Types.ChainId, GHC.Types.Int)])
    -> [GHC.Types.Int]
    -> Types.ChainId
    -> [Types.Label]
    -> Types.Label
    -> (Data.Map.Base.Map Types.ChainId (GHC.Base.String, [Types.Rule])
        -> NameIdChain.IdNameChainType Types.Rule)
    -> (NameIdChain.IdNameChainType Types.Rule
        -> NameIdChain.IdNameChainType Types.Rule)
    -> [(Types.ChainId, (GHC.Base.String, [Types.Rule]))]
    -> (# GHC.Base.String -> NameIdChain.IdNameChainType Types.Rule,
          Types.Rule -> Types.Rule,
          Types.ChainId -> GHC.Base.Maybe (GHC.Base.String, [Types.Rule]),
          Types.ChainId -> GHC.Base.Maybe [Types.Rule],
          Types.ChainId -> Types.RuleInd -> GHC.Base.Maybe Types.Rule,
          [(Types.ChainId, Types.RuleInd)],
          Types.ChainId -> GHC.Base.Maybe GHC.Base.String,
          Types.ChainId -> [Types.ChainId],
          [[Types.ChainId]],
          ([Types.Rule] -> [Types.Rule])
          -> Types.ChainId -> NameIdChain.IdNameChainType Types.Rule,
          Types.Rule
          -> Types.ChainId
          -> Types.RuleInd
          -> NameIdChain.IdNameChainType Types.Rule,
          [[Types.Rule]],
          [GHC.Base.String],
          [(GHC.Base.String, [Types.Rule])],
          [Types.ChainId],
          GHC.Base.String -> [Types.ChainId],
          GHC.Types.Int -> NameIdChain.IdNameChain,
          [Types.ChainId] -> NameIdChain.IdNameChainType Types.Rule,
          [Types.ChainId],
          [Types.ChainId],
          [Types.ChainId] -> [Types.ChainId],
          GHC.Types.Int -> GHC.Base.Maybe [(Types.ChainId, GHC.Types.Int)],
          [GHC.Types.Int],
          Types.ChainId,
          [Types.Label],
          Types.Label,
          Data.Map.Base.Map Types.ChainId (GHC.Base.String, [Types.Rule])
          -> NameIdChain.IdNameChainType Types.Rule,
          NameIdChain.IdNameChainType Types.Rule
          -> NameIdChain.IdNameChainType Types.Rule,
          [(Types.ChainId, (GHC.Base.String, [Types.Rule]))] #)
  {- Arity: 30,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
af1a205d8050ccf493a1cb48666e53f1
  $wf :: GHC.Prim.Int# -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
28247effbe2d0ca0ccc03de05936fb82
  addRulesToIdNameChain ::
    [(Types.Rule, GHC.Base.String, Types.Label)]
    -> NameIdChain.IdNameChain -> NameIdChain.IdNameChain
  {- Arity: 2,
     Strictness: <S,1*U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [(Types.Rule, GHC.Base.String, Types.Label)]
                   w1 :: NameIdChain.IdNameChain ->
                 case w1 of ww { NameIdChain.INC ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                 case RuleAdding.$waddRulesToIdNameChain
                        w
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww17
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29 of ww30 { (#,,,,,,,,,,,,,,,,,,,,,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ->
                 NameIdChain.INC
                   @ Types.Rule
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57
                   ww58
                   ww59 } }) -}
af731f325aba8d5bef6ccc02c636bba6
  instructionsToAddAtPos ::
    [Types.Instruction]
    -> NameIdChain.IdNameChain
    -> GHC.Types.IO [(Types.Rule, GHC.Base.String, Types.Label)]
  {- Arity: 3,
     Strictness: <S,1*U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                RuleAdding.instructionsToAddAtPos1
                  `cast`
                (<[Types.Instruction]>_R
                 ->_R <NameIdChain.IdNameChain>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <[(Types.Rule, GHC.Base.String, Types.Label)]>_R)) -}
8c66d02327c83e93b3e7fac4b726e7e8
  instructionsToAddAtPos1 ::
    [Types.Instruction]
    -> NameIdChain.IdNameChain
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Types.Rule, GHC.Base.String, Types.Label)] #)
  {- Arity: 3,
     Strictness: <S,1*U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U(U),U,U,U)><L,U> -}
"SPEC/RuleAdding $fShowGenRule @ Criteria" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                       Types.Criteria
  Types.$fShowGenRule @ Types.Criteria $dShow
  = RuleAdding.$s$fShowGenRule
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

