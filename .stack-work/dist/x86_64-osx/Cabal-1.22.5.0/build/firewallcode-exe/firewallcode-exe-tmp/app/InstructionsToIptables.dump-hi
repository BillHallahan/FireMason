
==================== FINAL INTERFACE ====================
2017-03-03 16:06:53.140718 UTC

interface main@main:InstructionsToIptables 7103
  interface hash: 46f0ee9809fc408a5ccd2216927a0b8d
  ABI hash: 11e7e1bfbb77fa65a9c9f4f63f49c0f7
  export-list hash: 02a97126ef86110d12944799c75427b4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e468f87777beb3fe7114763efe9ccb2f
  sig of: Nothing
  used TH splices: False
  where
exports:
  InstructionsToIptables.addToIptables
  InstructionsToIptables.commentOutRules
module dependencies: ConvertIptables ConvertIptablesLimits
                     ConvertIptablesPorts IptablesTypes NameIdChain ParserHelp Types
package dependencies: MissingH-1.3.0.2@Missi_JQoKIaJuITOBZjt8xhTikH
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.7@casei_2hQWsf0VfQP5NW180eleos
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY
                      largeword-1.2.5@large_7BOdRtoTTTgFdsG28EDk6P
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      regex-compat-0.95.1@regex_EyUO1k1s8YNJ81jSdgVW1z
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tostring-0.2.1.1@tostr_3WKXD89KZfc5BSX8Q5dXep
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         main@main:Types
         network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw:Network.Socket
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Addr
                         iproute-1.7.0@iprou_EmwGKuwHXxo93hguRyGitY:Data.IP.Range
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Debug.Trace 6660afb6094d69397ea084364da8f950
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map bf7758bd12b23a367777a33fd16e39de
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ConvertIptables 5872ddc3f380b8d79ef40b8b662fc6f7
  exports: 8e9c7987e07f6e90ba9667f0793f03cd
  convertScript' a92eaa00ec185591142f4baf87ba5923
import  -/  IptablesTypes 77929783e1bd548d87f5f7b07a624da9
  exports: 2ea6f182fbe7d9a4a26dc92a1b35a045
  Append 40c35647cc644dfa5212fe1713b1d46d
  Command 602f4fd470108f924d36e047f3eb72f6
  Insert 962c4dc7388417fd8f29498ff9c5ea3f
  comChainName fe1fc8f87f1e74216c46b2fa1648eed8
  command e19929f27dfd3ab9faeb59836fdad5cb
  fileline b498aec7b54d53a0bc5e0ad1cf3f794c
import  -/  NameIdChain bb1168b4d2b0d8906225834699a4eaf1
  exports: 7f5e2a9988285dd65e6bffba242d2ff7
  IdNameChain aea396c43cf9aa3176f82b0a2a6a1d1a
  lookupName 819e0c9d91c3e4c2396d6d0e37a83f43
import  -/  ParserHelp c7affdab4be2cddd08133e07d05d3b63
  exports: 4408f0f73d248a4701f2f315f854c188
import  -/  Types 5cc88623eea062e7f6011dfd679287af
  exports: 150e5976e36f4ba67c4c37181359bbdd
  ACCEPT c3a03ad0d4498a63dd85ab66746d4eca
  BoolFlag b5390a4135cbb979c4cce7301ad0f976
  Criteria cd9fa80f07dac492cd3e2abc1ff8b6ce
  DROP 8acb0376b37b6423d43f53c5349a67eb
  Destination 922d80ba258cc0a086584d38ca75ebef
  Go 6635489911924eab3806883546c7c528
  IPAddress f8c5099a7237025ef3713bebfb52a514
  Limit 5962206ea3870b4c24faa7effc070a30
  Not 61e60cc3636b62910d4a9b4b95695e64
  Port 73ebf9c03aa3055cd5c7eeff13e668ec
  Protocol dd6c0e897be9409b806a307928ee6cd1
  Rule 1d4b9954523d9dff99b05d967c44b033
  Rule 3dc6d62e77db94c517aa1b70e09fcbe3
  Source b53eb4518fedc84d30c0b4327bd32c7d
  Target c86273e8d5a2db581a040f85173b28c7
  flagsToStrings feb87806fdb6054e1c0f05d3d8a19500
  ifNotRemoveNot 3a12accec2bba676c87960a5264f3df1
  isNot c76e5bacc864bc47a7c3293b36d3b943
  stringsToFlags 574be1a19f736a3b96198282cabeefad
00e1fe03a2c2f07864c743307fe8e971
  $fToIptablesCommand ::
    InstructionsToIptables.ToIptables IptablesTypes.Command
  DFunId[0]
  {- Arity: 2, Strictness: <S,1*U><L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                InstructionsToIptables.$fToIptablesCommand_$cconvert
                  `cast`
                (Sym (InstructionsToIptables.NTCo:ToIptables[0]
                          <IptablesTypes.Command>_N)) -}
47773ada148e997b57a6770b64974ca3
  $fToIptablesCommand1 :: GHC.Base.String
  {- Strictness: b -}
d3caaf482d0048df9f70673d8eadb5df
  $fToIptablesCommand_$cconvert ::
    IptablesTypes.Command -> NameIdChain.IdNameChain -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,A>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: IptablesTypes.Command w1 :: NameIdChain.IdNameChain ->
                 InstructionsToIptables.$w$cconvert w) -}
00e1fe03a2c2f07864c743307fe8e971
  $fToIptablesGenRule :: InstructionsToIptables.ToIptables Types.Rule
  DFunId[0]
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,A)><L,U(A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                InstructionsToIptables.$fToIptablesGenRule_$cconvert
                  `cast`
                (Sym (InstructionsToIptables.NTCo:ToIptables[0] <Types.Rule>_N)) -}
24f79b15bfa9a6b08ced2736127023d0
  $fToIptablesGenRule1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-j DROP"#) -}
4394153cb64ca93eede1bf3ba7ee2007
  $fToIptablesGenRule2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-j ACCEPT"#) -}
be4911a58bdac60751a3278a435fa041
  $fToIptablesGenRule3 :: GHC.Base.String
  {- Strictness: b -}
924a524859d5a393d70814e09396788a
  $fToIptablesGenRule4 :: GHC.Base.String
  {- Strictness: b -}
504203118f468d4d8c1eb4344ee206a1
  $fToIptablesGenRule_$cconvert ::
    Types.Rule -> NameIdChain.IdNameChain -> GHC.Base.String
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,A)><L,U(A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Types.Rule w1 :: NameIdChain.IdNameChain ->
                 case w of ww { Types.Rule ww1 ww2 ww3 ->
                 InstructionsToIptables.$w$cconvert1 ww1 ww2 w1 }) -}
1bf662ef56f23c7c343848e6bdad6ae9
  $fToIptablesGenRule_$cconvert1 ::
    [Types.Target] -> NameIdChain.IdNameChain -> GHC.Base.String
  {- Arity: 2,
     Strictness: <S,1*U><L,U(A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: (\ tx :: [Types.Target] n :: NameIdChain.IdNameChain ->
                 letrec {
                   go5 :: [Types.Target] -> [GHC.Types.Char]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ ds :: [Types.Target] ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Char
                       : y ys
                       -> GHC.Base.++
                            @ GHC.Types.Char
                            (InstructionsToIptables.$fToIptablesGenRule_$cconvert2 y n)
                            (go5 ys) }
                 } in
                 go5 tx) -}
254a037144aa460a18b42dbb0f4a8c3a
  $fToIptablesGenRule_$cconvert2 ::
    Types.Target -> NameIdChain.IdNameChain -> GHC.Base.String
  {- Arity: 2,
     Strictness: <S,1*U><L,1*U(A,A,A,A,A,A,1*C1(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: (\ ds :: Types.Target n :: NameIdChain.IdNameChain ->
                 case ds of wild {
                   DEFAULT -> InstructionsToIptables.$fToIptablesGenRule4
                   Types.Go i ds1
                   -> case ds1 of wild1 { GHC.Types.I# ds2 ->
                      case ds2 of ds3 {
                        DEFAULT -> InstructionsToIptables.$fToIptablesGenRule4
                        0
                        -> case n of wild2 { NameIdChain.INC ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ds30 ds31 ds32 ->
                           case ds10 i of wild3 {
                             GHC.Base.Nothing -> InstructionsToIptables.$fToIptablesGenRule3
                             GHC.Base.Just ipv
                             -> GHC.CString.unpackAppendCString# "-j "# ipv } } } }
                   Types.ACCEPT -> InstructionsToIptables.$fToIptablesGenRule2
                   Types.DROP -> InstructionsToIptables.$fToIptablesGenRule1 }) -}
00e1fe03a2c2f07864c743307fe8e971
  $fToIptablesTarget ::
    InstructionsToIptables.ToIptables Types.Target
  DFunId[0]
  {- Arity: 2,
     Strictness: <S,1*U><L,1*U(A,A,A,A,A,A,1*C1(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                InstructionsToIptables.$fToIptablesGenRule_$cconvert2
                  `cast`
                (Sym (InstructionsToIptables.NTCo:ToIptables[0]
                          <Types.Target>_N)) -}
00e1fe03a2c2f07864c743307fe8e971
  $fToIptables[] :: InstructionsToIptables.ToIptables [Types.Target]
  DFunId[0]
  {- Arity: 2,
     Strictness: <S,1*U><L,U(A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                InstructionsToIptables.$fToIptablesGenRule_$cconvert1
                  `cast`
                (Sym (InstructionsToIptables.NTCo:ToIptables[0]
                          <[Types.Target]>_N)) -}
00e1fe03a2c2f07864c743307fe8e971
  $fToIptables[]0 ::
    InstructionsToIptables.ToIptables [Types.Criteria]
  DFunId[0]
  {- Arity: 2, Strictness: <S,1*U><L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                InstructionsToIptables.$fToIptables[]0_$cconvert
                  `cast`
                (Sym (InstructionsToIptables.NTCo:ToIptables[0]
                          <[Types.Criteria]>_N)) -}
693c9aa61bc3e90db43ede9e0aea1255
  $fToIptables[]0_$cconvert ::
    [Types.Criteria] -> NameIdChain.IdNameChain -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,A>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: [Types.Criteria] w1 :: NameIdChain.IdNameChain ->
                 InstructionsToIptables.$w$cconvert2 w) -}
deea8e4b2dfb22701b1ba74f58607144
  $s$fFoldableMap_$celem1 ::
    Types.Criteria
    -> Data.Map.Base.Map k Types.Criteria -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
05c7ef09ae8fe7430a74d8c837036def
  $w$cconvert :: IptablesTypes.Command -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: IptablesTypes.Command ->
                 case w of wild {
                   DEFAULT -> InstructionsToIptables.$fToIptablesCommand1
                   IptablesTypes.Append s -> GHC.CString.unpackAppendCString# "-A "# s
                   IptablesTypes.Insert s i
                   -> GHC.CString.unpackAppendCString#
                        "-I "#
                        (GHC.Base.++
                           @ GHC.Types.Char
                           s
                           (GHC.CString.unpackAppendCString#
                              " "#
                              (case i of ww2 { GHC.Types.I# ww3 ->
                               case GHC.Show.$wshowSignedInt
                                      0
                                      ww3
                                      (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                               GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))) }) -}
e32ace38076eb13dc96a32a47a3b5f4c
  $w$cconvert1 ::
    [Types.Criteria]
    -> [Types.Target] -> NameIdChain.IdNameChain -> GHC.Base.String
  {- Arity: 3,
     Strictness: <S,1*U><L,1*U><L,U(A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ ww :: [Types.Criteria]
                   ww1 :: [Types.Target]
                   w :: NameIdChain.IdNameChain ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (InstructionsToIptables.$w$cconvert2 ww)
                   (InstructionsToIptables.$fToIptablesGenRule_$cconvert1 ww1 w)) -}
eacc39852ef35e91f7be0c38241fee16
  $w$cconvert2 :: [Types.Criteria] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
00e1fe03a2c2f07864c743307fe8e971
  class ToIptables a where
    convert :: a -> NameIdChain.IdNameChain -> GHC.Base.String
80f5ecf8440cefbcd360d242b69a349d
  addToIptables ::
    [(Types.Rule, GHC.Base.String, GHC.Types.Int)]
    -> NameIdChain.IdNameChain -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3,
     Strictness: <S,1*U><L,U(A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U> -}
28c8db8d0a1eec03acf16d641ab460a2
  commentOutRules ::
    [(GHC.Base.String, GHC.Types.Int)]
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
instance InstructionsToIptables.ToIptables [IptablesTypes.Command]
  = InstructionsToIptables.$fToIptablesCommand
instance InstructionsToIptables.ToIptables [Types.GenRule]
  = InstructionsToIptables.$fToIptablesGenRule
instance InstructionsToIptables.ToIptables [Types.Target]
  = InstructionsToIptables.$fToIptablesTarget
instance InstructionsToIptables.ToIptables [[]]
  = InstructionsToIptables.$fToIptables[]
instance InstructionsToIptables.ToIptables [[]]
  = InstructionsToIptables.$fToIptables[]0
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

