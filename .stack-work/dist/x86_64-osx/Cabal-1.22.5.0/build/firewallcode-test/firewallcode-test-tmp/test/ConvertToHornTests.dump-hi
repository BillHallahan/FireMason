
==================== FINAL INTERFACE ====================
2016-07-21 03:26:39.705001 UTC

interface main@main:ConvertToHornTests 7103
  interface hash: d4287f773538773c47434a568ddea83b
  ABI hash: 65f9302f01d37b9ab53c368d522cfef7
  export-list hash: bf43ea042d8a9772b6028185f42b470b
  orphan hash: 4e75d7171eab0018727b8ba2c7ecae1d
  flag hash: 768efad6ceab0d9cfe2bb912c6118be4
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvertToHornTests.andCriteria
  ConvertToHornTests.convertToHornTests
  ConvertToHornTests.eliminateAndsTestAndFalse
  ConvertToHornTests.eliminateAndsTestAndTrue
  ConvertToHornTests.eliminateAndsTestNotAnd
  ConvertToHornTests.eliminateAndsTestNotNot
  ConvertToHornTests.eliminateAndsTestOrAnd
  ConvertToHornTests.eliminateAndsTestOrAnd2
  ConvertToHornTests.eliminateOrsTestAnd
  ConvertToHornTests.eliminateOrsTestOr
  ConvertToHornTests.eliminateOrsTestOr2
  ConvertToHornTests.simplifyNotsTestAnd
  ConvertToHornTests.simplifyNotsTestMixed
  ConvertToHornTests.simplifyNotsTestNot
  ConvertToHornTests.simplifyNotsTestOr
module dependencies: ConvertToHorn Types
package dependencies: HUnit-1.3.1.1@HUnit_7IPmJa5HmrxHl6ny5upchm
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0*
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  HUnit-1.3.1.1@HUnit_7IPmJa5HmrxHl6ny5upchm:Test.HUnit d58e5f70f93d158130fd424e61ba73e8
import  -/  HUnit-1.3.1.1@HUnit_7IPmJa5HmrxHl6ny5upchm:Test.HUnit.Base 3fa8f8d2179caf234ea001207f41fb0c
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ConvertToHorn a22e4241a25a4135f5a0ba3d8ec46e98
  exports: 6cae4fa71e994bf8d4abef0831a46b33
  eliminateAnds e9fda12cd16fa7bf3653704c47bf2122
  eliminateOrs ace4065f0f0e8b2053687384741c26e8
  simplifyNots 7d2cc672c917380485d2e3dbdb657f8d
import  -/  Types be1e767e9389ce9c8fd11ba155041f23
  exports: 98cf0ae77f95faeb276b282dfb3cdefd
  And 69fba4a95faaa8f829c278b146400a58
  Not 3535d01f02a34ce7e2e65f8bfd0e0468
  Or 48229210229e525ac9cc96e3f7d4cdaf
  Port 8ac4169bf898472df0a5d1d9380502e0
  PropVariableCriteria e1461d4596b1fd5d85b7e8ca96e75587
  PropVariableTarget 5ad7f002faeafc40e3f1236dd1296d21
  Protocol 177d6607da755b98ab077f33e0dc8651
  Rule 383b44bce8aade0d9cd1e1c5c0d45fb5
  criteria 5b8533cdc53545fcea0706ca7ae2ba91
  label 29e70a94ef11ac439309b20c2d514613
  targets dabc9615e422ce8e03e5c82c6f655a6d
aff5d6daaf1b236f86c27d12810b4b58
  $s$fEq(,,) ::
    GHC.Classes.Eq ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ([Types.Criteria], [Types.Rule], GHC.Types.Int)
                  (GHC.Classes.$fEq(,,)_$c==
                     @ [Types.Criteria]
                     @ [Types.Rule]
                     @ GHC.Types.Int
                     ConvertToHornTests.$s$fEq(,,)_$dEq
                     ConvertToHornTests.$s$fEq(,,)_$dEq1
                     GHC.Classes.$fEqInt)
                  ConvertToHornTests.$s$fEq(,,)_$s$fEq(,,)_$c/= -}
76bf4c1c38372c8bf628b7215a63cd33
  $s$fEq(,,)_$dEq :: GHC.Classes.Eq [Types.Criteria]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1 -}
73fecbd306c276d3a4000fb2aa852f3d
  $s$fEq(,,)_$dEq1 :: GHC.Classes.Eq [Types.Rule]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                ConvertToHornTests.$s$fEq(,,)_$s$fEq[] -}
6e381106906e90c5d575ee6d03c611f6
  $s$fEq(,,)_$s$fEq(,,)_$c/= ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int)
    -> ([Types.Criteria], [Types.Rule], GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U(U))><S(SLL),1*U(1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ a1 :: ([Types.Criteria], [Types.Rule], GHC.Types.Int)
                   b1 :: ([Types.Criteria], [Types.Rule], GHC.Types.Int) ->
                 case GHC.Classes.$fEq(,,)_$c==
                        @ [Types.Criteria]
                        @ [Types.Rule]
                        @ GHC.Types.Int
                        ConvertToHornTests.$s$fEq(,,)_$dEq
                        ConvertToHornTests.$s$fEq(,,)_$dEq1
                        GHC.Classes.$fEqInt
                        a1
                        b1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c33e1070c1a88bfb08964b90a03ea9b5
  $s$fEq(,,)_$s$fEq[] :: GHC.Classes.Eq [Types.Rule]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Rule]
                  (GHC.Classes.$fEq[]_$c== @ Types.Rule Types.$fEqRule)
                  ConvertToHornTests.$s$fEq(,,)_$s$fEq[]_$c/= -}
1565a27046388cc7e1e84fa6b32030db
  $s$fEq(,,)_$s$fEq[]1 :: GHC.Classes.Eq [Types.Criteria]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Criteria]
                  (GHC.Classes.$fEq[]_$c== @ Types.Criteria Types.$fEqCriteria)
                  ConvertToHornTests.$s$fEq(,,)_$s$fEq[]_$c/=1 -}
50d7d13623b9e79c5a82bfe4b8743eac
  $s$fEq(,,)_$s$fEq[]_$c/= ::
    [Types.Rule] -> [Types.Rule] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ x :: [Types.Rule] y :: [Types.Rule] ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c== @ Types.Rule Types.$fEqRule x y)) -}
7bbc1e8cbe19f171afef5de650a90d20
  $s$fEq(,,)_$s$fEq[]_$c/=1 ::
    [Types.Criteria] -> [Types.Criteria] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ x :: [Types.Criteria] y :: [Types.Criteria] ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ Types.Criteria
                      Types.$fEqCriteria
                      x
                      y)) -}
fd7ddd37e4872f37a467f88b400ba3c4
  $s$fShow(,,) ::
    GHC.Show.Show ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ([Types.Criteria], [Types.Rule], GHC.Types.Int)
                  (GHC.Show.$fShow(,,)_$cshowsPrec
                     @ [Types.Criteria]
                     @ [Types.Rule]
                     @ GHC.Types.Int
                     ConvertToHornTests.$s$fShow(,,)_$dShow
                     ConvertToHornTests.$s$fShow(,,)_$dShow1
                     GHC.Show.$fShowInt)
                  ConvertToHornTests.$s$fShow(,,)_$s$fShow(,,)_$cshow
                  ConvertToHornTests.$s$fShow(,,)_$s$fShow(,,)_$cshowList -}
4181d67aef369eac235bf43c66b4cb43
  $s$fShow(,,)1 :: [[Types.Rule]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [[Types.Rule]] eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ [Types.Rule]
                   Types.$fShowRule_$cshowList
                   eta
                   eta1) -}
08503bd3e9e634b73f5a6584685962bd
  $s$fShow(,,)2 :: [Types.Rule] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: [Types.Rule] ->
                 GHC.Show.showList__
                   @ Types.Rule
                   Types.$fShowRule1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
bec89cb3d56a7fef700f41ab18b026e6
  $s$fShow(,,)3 :: GHC.Types.Int -> [Types.Rule] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: [Types.Rule]
                   eta1 :: GHC.Base.String ->
                 Types.$fShowRule_$cshowList eta eta1) -}
4c30ddb8a06ec25fe6b51d3e5622a310
  $s$fShow(,,)4 :: [[Types.Criteria]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [[Types.Criteria]] eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ [Types.Criteria]
                   Types.$fShowCriteria_$cshowList
                   eta
                   eta1) -}
88b84e43a51d3e8e1b80338e3d8d41a5
  $s$fShow(,,)5 :: [Types.Criteria] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: [Types.Criteria] ->
                 GHC.Show.showList__
                   @ Types.Criteria
                   Types.$fShowCriteria1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a3a120b46a6730dd5c8fd94cfe4d7d75
  $s$fShow(,,)6 ::
    GHC.Types.Int -> [Types.Criteria] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: [Types.Criteria]
                   eta1 :: GHC.Base.String ->
                 Types.$fShowCriteria_$cshowList eta eta1) -}
af9e6954a5b37ff7cc3b24bd35cb594d
  $s$fShow(,,)_$dShow :: GHC.Show.Show [Types.Criteria]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1 -}
389c55aa5cca4a8f90a53e81dbb99fea
  $s$fShow(,,)_$dShow1 :: GHC.Show.Show [Types.Rule]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                ConvertToHornTests.$s$fShow(,,)_$s$fShow[] -}
c4fbd535295bdbd091369dcc6c5aff70
  $s$fShow(,,)_$s$fShow(,,)_$cshow ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int) -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U,U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ x :: ([Types.Criteria], [Types.Rule], GHC.Types.Int) ->
                 GHC.Show.$fShow(,,)_$cshowsPrec
                   @ [Types.Criteria]
                   @ [Types.Rule]
                   @ GHC.Types.Int
                   ConvertToHornTests.$s$fShow(,,)_$dShow
                   ConvertToHornTests.$s$fShow(,,)_$dShow1
                   GHC.Show.$fShowInt
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9d95efb3670e6069ff92bb77fc872ef4
  $s$fShow(,,)_$s$fShow(,,)_$cshowList ::
    [([Types.Criteria], [Types.Rule], GHC.Types.Int)] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [([Types.Criteria], [Types.Rule], GHC.Types.Int)]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ ([Types.Criteria], [Types.Rule], GHC.Types.Int)
                   (GHC.Show.$fShow(,,)_$cshowsPrec
                      @ [Types.Criteria]
                      @ [Types.Rule]
                      @ GHC.Types.Int
                      ConvertToHornTests.$s$fShow(,,)_$dShow
                      ConvertToHornTests.$s$fShow(,,)_$dShow1
                      GHC.Show.$fShowInt
                      GHC.Show.shows18)
                   eta
                   eta1) -}
0d243b976ab21a3279ac44f4f8df282d
  $s$fShow(,,)_$s$fShow[] :: GHC.Show.Show [Types.Rule]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Rule]
                  ConvertToHornTests.$s$fShow(,,)3
                  ConvertToHornTests.$s$fShow(,,)2
                  ConvertToHornTests.$s$fShow(,,)1 -}
dc7b03b8974a1984fcc179d10c747f3a
  $s$fShow(,,)_$s$fShow[]1 :: GHC.Show.Show [Types.Criteria]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.Criteria]
                  ConvertToHornTests.$s$fShow(,,)6
                  ConvertToHornTests.$s$fShow(,,)5
                  ConvertToHornTests.$s$fShow(,,)4 -}
dcc08867f42bd02394375d0d3e23a46b
  andCriteria :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria1
                   (GHC.Types.[] @ Types.Criteria)) -}
bbe9842dc6bfa6f6c98de8c225898ac2
  andCriteria1 :: Types.Criteria
  {- Strictness: m1,
     Unfolding: (Types.And ConvertToHornTests.andCriteria2) -}
b3a20a913ab33de13e73e3e8c78631f2
  andCriteria10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3) -}
6910b0bc63f7f88474174976357e4287
  andCriteria11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "destination"#) -}
cd1f1f719683ee57db1589413790fc8f
  andCriteria12 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m7,
     Unfolding: (Types.Protocol ConvertToHornTests.andCriteria13) -}
a16b4ecd67a7704a746ec64abea50ddf
  andCriteria13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2) -}
d6b11a8e1d11fefaa3eb2ae52f863b2b
  andCriteria14 :: Types.Criteria
  {- Strictness: m4,
     Unfolding: (Types.Port
                   ConvertToHornTests.andCriteria11
                   ConvertToHornTests.andCriteria15) -}
675aecba115cf2d4c5b1a71d72617c78
  andCriteria15 ::
    Data.Either.Either GHC.Types.Int (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Data.Either.Left
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   ConvertToHornTests.andCriteria16) -}
93b278cf6e80dafc7d962def6098bc3f
  andCriteria16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1) -}
bf0356f0815ebb96b65d1aec21842119
  andCriteria17 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m7,
     Unfolding: (Types.Protocol ConvertToHornTests.andCriteria16) -}
0585d02607028beee514a99b0da9ea2b
  andCriteria2 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.andCriteria3) -}
3ab9b64cc8fda3b60a61f05bc939bc68
  andCriteria3 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria14
                   ConvertToHornTests.andCriteria4) -}
a832aa45d8228b03b4b4162ea3c02c0c
  andCriteria4 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria5
                   (GHC.Types.[] @ Types.Criteria)) -}
62cd295b1466122b9a88c2a9c3f8ac4b
  andCriteria5 :: Types.Criteria
  {- Strictness: m1,
     Unfolding: (Types.And ConvertToHornTests.andCriteria6) -}
0c736f4732b88ef3ff93a3c5fba16143
  andCriteria6 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria12
                   ConvertToHornTests.andCriteria7) -}
bfc43c9cc0129ca545d54aeb4ad9341a
  andCriteria7 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria8
                   (GHC.Types.[] @ Types.Criteria)) -}
e39c21974ec6837742742348e1ee0acb
  andCriteria8 :: Types.Criteria
  {- Strictness: m4,
     Unfolding: (Types.Port
                   ConvertToHornTests.andCriteria11
                   ConvertToHornTests.andCriteria9) -}
f426c6701028058198e39e80b8019a09
  andCriteria9 ::
    Data.Either.Either GHC.Types.Int (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Data.Either.Left
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   ConvertToHornTests.andCriteria10) -}
957695a249f90d7ac2c0dc5bc76bd699
  convertToHornTests :: Test.HUnit.Base.Test
  {- Strictness: m2,
     Unfolding: (Test.HUnit.Base.TestList
                   ConvertToHornTests.convertToHornTests1) -}
e51816aeebf8ec2e00e0f2e39e9070a6
  convertToHornTests1 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests36
                   ConvertToHornTests.convertToHornTests2) -}
cb224777fdd0e9b7c875c977f0a935c1
  convertToHornTests10 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests20
                   ConvertToHornTests.convertToHornTests11) -}
7e603a368b7de015286f2718c7b613f3
  convertToHornTests11 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests18
                   ConvertToHornTests.convertToHornTests12) -}
6732d3250e6da98ca0065378972a27f4
  convertToHornTests12 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests16
                   ConvertToHornTests.convertToHornTests13) -}
f2f5dbc35979d19834667d6d742055ae
  convertToHornTests13 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests14
                   (GHC.Types.[] @ Test.HUnit.Base.Test)) -}
0b76c696a0b6c515e4e7d10a13a28abd
  convertToHornTests14 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests15
                   ConvertToHornTests.simplifyNotsTestMixed) -}
cda0228f2c38b6b8aba1db52e2b3a344
  convertToHornTests15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "simplifyNotsTestMixed"#) -}
51d93607a6da9a12d2964e7d1a32faed
  convertToHornTests16 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests17
                   ConvertToHornTests.simplifyNotsTestNot) -}
3c7b5b43f4f620d5640ee7c662318732
  convertToHornTests17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "simplifyNotsTestNot"#) -}
c66b4e02821757bd712c0df35eba572e
  convertToHornTests18 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests19
                   ConvertToHornTests.simplifyNotsTestOr) -}
bfdb16c6c247c8dbcd70042e81eb8dba
  convertToHornTests19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "simplifyNotsTestOr"#) -}
894abbeb75080608708b8bdb5b3a9c38
  convertToHornTests2 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests35
                   ConvertToHornTests.convertToHornTests3) -}
746f0d1528658a244e73a57bc2f996a3
  convertToHornTests20 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests21
                   ConvertToHornTests.simplifyNotsTestAnd) -}
582a9d0df99b0a9f393f0da3368204b8
  convertToHornTests21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "simplifyNotsTestAnd"#) -}
7365b0a2264f8432c1c217c1ac4c718f
  convertToHornTests22 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests23
                   ConvertToHornTests.eliminateOrsTestOr2) -}
73db2e5544c4b8a5cb154020fd41842c
  convertToHornTests23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eliminateOrsOr"#) -}
5a8ca3b70f908df328471578c1693719
  convertToHornTests24 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests23
                   ConvertToHornTests.eliminateOrsTestOr) -}
c6d53345f6e39969fe2a63a1c3cdb167
  convertToHornTests25 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests26
                   ConvertToHornTests.eliminateOrsTestAnd) -}
3fa459162e66992c3f7781e50ae45a43
  convertToHornTests26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eliminateOrsAnd"#) -}
b3b826732fabfc7a76a9568ff3edfd14
  convertToHornTests27 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests28
                   ConvertToHornTests.eliminateAndsTestAndTrue) -}
1f69c788b36b0f651f48f0a1246115c0
  convertToHornTests28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateAndsTestAndTrue"#) -}
e2d322a94bf5191e082f1a41ab373e9e
  convertToHornTests29 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests30
                   ConvertToHornTests.eliminateAndsTestAndFalse) -}
97a395c92763766d819c8c3867617b35
  convertToHornTests3 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests33
                   ConvertToHornTests.convertToHornTests4) -}
bd44d59bb059cda490b7d68e40116051
  convertToHornTests30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateAndsTestAndFalse"#) -}
4d282aec406cde833ba6c834755b2a13
  convertToHornTests31 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests32
                   ConvertToHornTests.eliminateAndsTestNotNot) -}
7d1d19a8518004f72fc083a347bdbd54
  convertToHornTests32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateAndsTestNotNot"#) -}
58cb50afdbb2b8195d15f84c1899518a
  convertToHornTests33 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests34
                   ConvertToHornTests.eliminateAndsTestOrAnd2) -}
c80ae48fc70cee1f54b5a83d0e8519fd
  convertToHornTests34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateAndsTestNotOrAnd"#) -}
6254b78ca547e10547fffd52f860518c
  convertToHornTests35 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests34
                   ConvertToHornTests.eliminateAndsTestOrAnd) -}
12509fd406419993130e91b8fd973ead
  convertToHornTests36 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   ConvertToHornTests.convertToHornTests37
                   ConvertToHornTests.eliminateAndsTestNotAnd) -}
9132191627fc58c7e4dbd4f08560f44b
  convertToHornTests37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateAndsTestNotAnd"#) -}
60068c9b4a7cbc07654e91673503a5a4
  convertToHornTests4 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests31
                   ConvertToHornTests.convertToHornTests5) -}
9a3e39e5c527d201e7e993f80753fea7
  convertToHornTests5 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests29
                   ConvertToHornTests.convertToHornTests6) -}
e01c1873e254961e00fe531bb490f14b
  convertToHornTests6 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests27
                   ConvertToHornTests.convertToHornTests7) -}
6db494faed0eebfbfa7e09891771f894
  convertToHornTests7 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests25
                   ConvertToHornTests.convertToHornTests8) -}
a9b881c6d4cbe99126bdeb2325a84930
  convertToHornTests8 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests24
                   ConvertToHornTests.convertToHornTests9) -}
4b89df84146ef620da716254b1852206
  convertToHornTests9 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   ConvertToHornTests.convertToHornTests22
                   ConvertToHornTests.convertToHornTests10) -}
4141f993c34361320b8e3cf930245db0
  eliminateAndsTestAndFalse :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateAndsTestAndFalse1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
0c5645e447b7e687a90f1e50dffb79b0
  eliminateAndsTestAndFalse1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.eliminateAndsTestAndFalse3
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.eliminateAndsTestAndTrue4
                   ConvertToHornTests.eliminateAndsTestAndFalse2
                   ConvertToHornTests.simplifyNotsTestOr11) -}
097264228826f090c6823cd3fc2b9806
  eliminateAndsTestAndFalse2 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.eliminateAnds
                   ConvertToHornTests.eliminateAndsTestAndTrue2
                   GHC.Types.False) -}
d59f5bae7418f4dfe421847a14e68256
  eliminateAndsTestAndFalse3 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateAndsTestAndFalse4) -}
0fd97365cc52482c9dfcf4a78d402612
  eliminateAndsTestAndFalse4 ::
    [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateAndsTestAndFalse5
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
786e503fb6450b9ac1ea1689b7fedfc6
  eliminateAndsTestAndFalse5 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateAndsTestAndFalse6)) -}
7959f72172fabf0cc8880bb6ed58de2d
  eliminateAndsTestAndFalse6 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateAndsTestAndFalse7
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateAndsTestAndFalse7
                   ConvertToHornTests.simplifyNotsTestNot10) -}
0defaf40e4e9db86fc582cb03f10d6a0
  eliminateAndsTestAndFalse7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 80) -}
bc81249e1ddbfba21a022ab6f90598b0
  eliminateAndsTestAndTrue :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateAndsTestAndTrue1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
4c3190ccd7e3357f10f7e0123c899327
  eliminateAndsTestAndTrue1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.eliminateAndsTestAndTrue5
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.eliminateAndsTestAndTrue4
                   ConvertToHornTests.eliminateAndsTestAndTrue3
                   ConvertToHornTests.eliminateAndsTestAndTrue2) -}
1c43182bbd1fa676c4afc71f0055a097
  eliminateAndsTestAndTrue2 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestAnd7
                   (GHC.Types.[] @ Types.Criteria)) -}
eed778777582211fb1316655f5e3df7c
  eliminateAndsTestAndTrue3 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.eliminateAnds
                   ConvertToHornTests.eliminateAndsTestAndTrue2
                   GHC.Types.True) -}
b02e0acf1460bb38b9457c6ddf80b598
  eliminateAndsTestAndTrue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateAnd is not eliminating corrrectly."#) -}
f4b8abda9c8177cf3433a03772632af6
  eliminateAndsTestAndTrue5 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateAndsTestAndTrue6) -}
13748dbaf1e17a603058b31ccb748107
  eliminateAndsTestAndTrue6 ::
    [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateAndsTestAndTrue7
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
9abcd023f87eed5dc87e2c16bcdaf900
  eliminateAndsTestAndTrue7 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateAndsTestAndTrue8)) -}
8d835be63d973e52aa4b8e02069c1fc3
  eliminateAndsTestAndTrue8 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateAndsTestAndTrue9
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateAndsTestAndTrue9
                   ConvertToHornTests.simplifyNotsTestNot10) -}
9b42debc75448eeb4f769a3d4b47d0fc
  eliminateAndsTestAndTrue9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 85) -}
18e4d3552b768978878011b5eaf6fc44
  eliminateAndsTestNotAnd :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateAndsTestNotAnd1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
413474eb8a08e5a2fd16fd9c3dfd88b3
  eliminateAndsTestNotAnd1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.eliminateAndsTestNotAnd10
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.eliminateAndsTestAndTrue4
                   ConvertToHornTests.eliminateAndsTestNotAnd6
                   ConvertToHornTests.eliminateAndsTestNotAnd2) -}
373deb7b3513d7e886dafbc8bb238fc3
  eliminateAndsTestNotAnd10 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateAndsTestNotAnd11) -}
082671745e97766badf2754b3118b330
  eliminateAndsTestNotAnd11 ::
    [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateAndsTestNotAnd12
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
30d256bd0b1601d8d43059d4531c9d07
  eliminateAndsTestNotAnd12 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateAndsTestNotAnd13)) -}
1db71e42d626ce268bd4c929cebd31c7
  eliminateAndsTestNotAnd13 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateAndsTestNotAnd14
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateAndsTestNotAnd14
                   ConvertToHornTests.simplifyNotsTestNot10) -}
76ded0c71cd7e7486f15ffc72a069292
  eliminateAndsTestNotAnd14 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 24) -}
be6c4e782d171d391421db4387e35b77
  eliminateAndsTestNotAnd2 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestNotAnd3
                   (GHC.Types.[] @ Types.Criteria)) -}
4649a6a184d6014d5793cf452fb2d3dc
  eliminateAndsTestNotAnd3 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotAnd4) -}
334deabc219daed745c3b95612eb2560
  eliminateAndsTestNotAnd4 :: Types.Criteria
  {- Strictness: m1,
     Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestNotAnd5) -}
47ad23ae99082c0082e5d439c6816419
  eliminateAndsTestNotAnd5 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.eliminateAndsTestOrAnd34) -}
c9a792e38367d4fd462026bd212a53ae
  eliminateAndsTestNotAnd6 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.eliminateAnds
                   ConvertToHornTests.eliminateAndsTestNotAnd7
                   GHC.Types.False) -}
88e570de07e7a448fd073066a7edcf3b
  eliminateAndsTestNotAnd7 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestNotAnd8
                   (GHC.Types.[] @ Types.Criteria)) -}
b00491849835f43ef022eb06a5cd971e
  eliminateAndsTestNotAnd8 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotAnd9) -}
564b9de092b5bc3402b69d2d9ba0e15d
  eliminateAndsTestNotAnd9 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestOrAnd31) -}
261ead699e593007bad7483b366d1527
  eliminateAndsTestNotNot :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateAndsTestNotNot1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
df101e33a6cd95732954e45be68c2608
  eliminateAndsTestNotNot1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.eliminateAndsTestNotNot25
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.eliminateAndsTestNotNot24
                   ConvertToHornTests.eliminateAndsTestNotNot13
                   ConvertToHornTests.eliminateAndsTestNotNot2) -}
84c7117a1d60be84b9de750bc6532d41
  eliminateAndsTestNotNot10 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestNotNot11
                   (GHC.Types.[] @ Types.Criteria)) -}
dcf130dc40dbeb8e6668771eb56426c9
  eliminateAndsTestNotNot11 :: Types.Criteria
  {- Unfolding: (Types.Port
                   ConvertToHornTests.eliminateAndsTestNotNot12
                   ConvertToHornTests.andCriteria15) -}
eb183ee1b270d78890cfea2ba3e0447c
  eliminateAndsTestNotNot12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "source"#) -}
f87c41f5101b9a716fbed8c8695bb661
  eliminateAndsTestNotNot13 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.eliminateAnds
                   ConvertToHornTests.eliminateAndsTestNotNot14
                   GHC.Types.True) -}
dda5ac26eb29d1ed76a8649b3ba7a8de
  eliminateAndsTestNotNot14 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestNotNot15
                   (GHC.Types.[] @ Types.Criteria)) -}
8ae75da02842cf840f158abb783d8669
  eliminateAndsTestNotNot15 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot16) -}
7f4e46dbbf7b28699b7a91a10cdc3c86
  eliminateAndsTestNotNot16 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot17) -}
2f8ce0d22b316fc755ef801cdf772e52
  eliminateAndsTestNotNot17 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot18) -}
186a01c142b95cc641234d4b10f19e03
  eliminateAndsTestNotNot18 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot19) -}
dfeb9cb7b4db64cd690b8e4a83e805bc
  eliminateAndsTestNotNot19 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot20) -}
5a194eb04d8b7b7cbe779f1489c66285
  eliminateAndsTestNotNot2 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestNotNot3
                   (GHC.Types.[] @ Types.Criteria)) -}
415bd18198036130e6063a76cff1c5b5
  eliminateAndsTestNotNot20 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestNotNot21) -}
ddc5f9f86b4843463a71b94285529e0a
  eliminateAndsTestNotNot21 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.eliminateAndsTestNotNot22) -}
666dd3e17c9bbb6c00c2f53eb9339989
  eliminateAndsTestNotNot22 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestNotNot23
                   (GHC.Types.[] @ Types.Criteria)) -}
a550cfdd827d4d71ade49b054eb16fc7
  eliminateAndsTestNotNot23 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestNotNot10) -}
5d865b753572d1ee1ba757f56e72a1d2
  eliminateAndsTestNotNot24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateAnds is not eliminating corrrectly."#) -}
b469e32402e99fd7b88987ea56eda36d
  eliminateAndsTestNotNot25 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateAndsTestNotNot26) -}
290af17bfe69afd9202ab5fd6d75c25a
  eliminateAndsTestNotNot26 ::
    [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateAndsTestNotNot27
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c13939c5bce8a1521067902e0db1bcdc
  eliminateAndsTestNotNot27 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateAndsTestNotNot28)) -}
b276e0c25a590ef09bf6923c67cb0fb8
  eliminateAndsTestNotNot28 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateAndsTestNotNot29
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateAndsTestNotNot29
                   ConvertToHornTests.simplifyNotsTestNot10) -}
657b0c4db46e05509d58e0f5f24a11d4
  eliminateAndsTestNotNot29 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 67) -}
f8e8445fc7593ca2735d10ed8a919f92
  eliminateAndsTestNotNot3 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot4) -}
6cb903ab524661083716890186dd7f9c
  eliminateAndsTestNotNot4 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot5) -}
5fb1596f1ed5b2a612ed831d0faed857
  eliminateAndsTestNotNot5 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot6) -}
7f431f701ae7580dcb96d7685d3e3848
  eliminateAndsTestNotNot6 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot7) -}
b10d2db9917fb023931a49fe58f091f2
  eliminateAndsTestNotNot7 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestNotNot8) -}
e30caa1a7b0448e9fa9171f7b83e8165
  eliminateAndsTestNotNot8 :: Types.Criteria
  {- Strictness: m1,
     Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestNotNot9) -}
0762eecd33b6e75804fc9569d8ee14f7
  eliminateAndsTestNotNot9 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.eliminateAndsTestNotNot10) -}
a8364ff96d4a5dc83eee9e8ca6580d64
  eliminateAndsTestOrAnd :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateAndsTestOrAnd27
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
aeb252a7f9766bcd6c6ef436ec4ba91b
  eliminateAndsTestOrAnd1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.eliminateAndsTestOrAnd22
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.eliminateAndsTestNotNot24
                   ConvertToHornTests.eliminateAndsTestOrAnd12
                   ConvertToHornTests.eliminateAndsTestOrAnd3) -}
506a6974b972435812e9f2a74f18dbf5
  eliminateAndsTestOrAnd10 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd11
                   ConvertToHornTests.andCriteria7) -}
767122afccf7bbec5e015b8d55052893
  eliminateAndsTestOrAnd11 :: Types.Criteria
  {- Unfolding: (Types.Port
                   ConvertToHornTests.eliminateAndsTestNotNot12
                   ConvertToHornTests.eliminateOrsTestOr18) -}
854917d0002cbf5ef4b4bb2a787b166d
  eliminateAndsTestOrAnd12 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.eliminateAnds
                   ConvertToHornTests.eliminateAndsTestOrAnd13
                   GHC.Types.False) -}
bd779b80218d10f5f2134bb8a42435b9
  eliminateAndsTestOrAnd13 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd14
                   (GHC.Types.[] @ Types.Criteria)) -}
d72e8a4f4e63ca9b68cc180d13f6673f
  eliminateAndsTestOrAnd14 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestOrAnd15) -}
4b0f4e17870d591661257242caa11659
  eliminateAndsTestOrAnd15 :: Types.Criteria
  {- Unfolding: (Types.Or
                   ConvertToHornTests.eliminateAndsTestOrAnd16) -}
5fff7399ceda80e6a788262ff86e61ee
  eliminateAndsTestOrAnd16 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.eliminateAndsTestOrAnd17) -}
459ee6ef6e70a9fc26956b666f873a4b
  eliminateAndsTestOrAnd17 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd18
                   (GHC.Types.[] @ Types.Criteria)) -}
0efb7847aaf5068ec5585b71e1300590
  eliminateAndsTestOrAnd18 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestOrAnd19) -}
802b28196d5c13ec10685fad4c972e3a
  eliminateAndsTestOrAnd19 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria14
                   ConvertToHornTests.eliminateAndsTestOrAnd20) -}
2f1b96fe1dcfa829df3c3c777a9ed166
  eliminateAndsTestOrAnd2 :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateAndsTestOrAnd1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
ae5aaa676fdf5234525085cec6d0443a
  eliminateAndsTestOrAnd20 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd21
                   (GHC.Types.[] @ Types.Criteria)) -}
c7c4e569d3e1e1eee0c7410c03a894e2
  eliminateAndsTestOrAnd21 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestOrAnd10) -}
4a8fa7cbd13c00fc36f4f88455bd76d8
  eliminateAndsTestOrAnd22 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateAndsTestOrAnd23) -}
2a2a5f4b4ff18d6d7b542a6e5eb7227a
  eliminateAndsTestOrAnd23 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateAndsTestOrAnd24
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
d03e57781708dbe914b034fad99049b8
  eliminateAndsTestOrAnd24 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateAndsTestOrAnd25)) -}
38dd2c8ee4b92f01ac399fe2708cf6bb
  eliminateAndsTestOrAnd25 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateAndsTestOrAnd26
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateAndsTestOrAnd26
                   ConvertToHornTests.simplifyNotsTestNot10) -}
bc5d98ef94af92cd9972561986cf3c09
  eliminateAndsTestOrAnd26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 50) -}
3aae3b614b015f65249e2bf55bbecbe7
  eliminateAndsTestOrAnd27 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.eliminateAndsTestOrAnd37
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.eliminateAndsTestNotNot24
                   ConvertToHornTests.eliminateAndsTestOrAnd36
                   ConvertToHornTests.eliminateAndsTestOrAnd28) -}
be95c14cbc516966c4a34abb6d43c899
  eliminateAndsTestOrAnd28 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd29
                   (GHC.Types.[] @ Types.Criteria)) -}
2d959fa5c907d76ab48c109cc863263a
  eliminateAndsTestOrAnd29 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestOrAnd30) -}
58424ee1f3309d3acc1557ef7fc59dda
  eliminateAndsTestOrAnd3 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd4
                   (GHC.Types.[] @ Types.Criteria)) -}
9f8537ba5b3ba28e270c07f0e2b162e8
  eliminateAndsTestOrAnd30 :: Types.Criteria
  {- Unfolding: (Types.Or
                   ConvertToHornTests.eliminateAndsTestOrAnd31) -}
8b5cf82ff63a1990a923d27e7cc5384d
  eliminateAndsTestOrAnd31 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.eliminateAndsTestOrAnd32) -}
b0aab0b2d547d845969636db42ff0945
  eliminateAndsTestOrAnd32 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd33
                   (GHC.Types.[] @ Types.Criteria)) -}
e7f7ed65ed4152c1a38423bf54c78cc7
  eliminateAndsTestOrAnd33 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestOrAnd34) -}
f6a36fdee988c4f0e469d01aba4877dd
  eliminateAndsTestOrAnd34 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria14
                   ConvertToHornTests.eliminateAndsTestOrAnd35) -}
dda8b575f58bf73c60eb8dd8e9c3d93c
  eliminateAndsTestOrAnd35 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd11
                   (GHC.Types.[] @ Types.Criteria)) -}
7e90931ed917d87b1ebc826813e1d58a
  eliminateAndsTestOrAnd36 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.eliminateAnds
                   ConvertToHornTests.eliminateAndsTestOrAnd28
                   GHC.Types.False) -}
60d1d10546e056fea893092971d575f2
  eliminateAndsTestOrAnd37 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateAndsTestOrAnd38) -}
e02e9dad486f1c1498e4333dc7462c1a
  eliminateAndsTestOrAnd38 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateAndsTestOrAnd39
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
420c604ac71b65f11c25a651597e12bc
  eliminateAndsTestOrAnd39 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateAndsTestOrAnd40)) -}
99e8796a9e6e36c88fbd49b45f08b37c
  eliminateAndsTestOrAnd4 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.eliminateAndsTestOrAnd5) -}
9c07921eb2480486d686e54db70ed667
  eliminateAndsTestOrAnd40 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateAndsTestOrAnd41
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateAndsTestOrAnd41
                   ConvertToHornTests.simplifyNotsTestNot10) -}
95a999fed453a3daa46b15af5ae75708
  eliminateAndsTestOrAnd41 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 36) -}
9a763f883cae509882a31cd20b0acde1
  eliminateAndsTestOrAnd5 :: Types.Criteria
  {- Strictness: m2,
     Unfolding: (Types.Or ConvertToHornTests.eliminateAndsTestOrAnd6) -}
0522f3745773022bdf6088279f52dbf5
  eliminateAndsTestOrAnd6 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.eliminateAndsTestOrAnd7) -}
0e77b277f80b5e58b0a033d709207200
  eliminateAndsTestOrAnd7 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateAndsTestOrAnd8
                   (GHC.Types.[] @ Types.Criteria)) -}
01bf911ca7defcc5628cf4224ed7dfc4
  eliminateAndsTestOrAnd8 :: Types.Criteria
  {- Strictness: m1,
     Unfolding: (Types.And
                   ConvertToHornTests.eliminateAndsTestOrAnd9) -}
fb42d77c73e4f4f3d625b286baabd152
  eliminateAndsTestOrAnd9 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria14
                   ConvertToHornTests.eliminateAndsTestOrAnd10) -}
73095a7aa54a4a431aa92ed346643727
  eliminateOrsTestAnd :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateOrsTestAnd1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
b52e8438016de6fd23e8724d9fb3ffc6
  eliminateOrsTestAnd1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ ([Types.Criteria], [Types.Rule], GHC.Types.Int)
                   ConvertToHornTests.eliminateOrsTestAnd4
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)
                   ConvertToHornTests.$s$fShow(,,)
                   ConvertToHornTests.eliminateOrsTestOr45
                   ConvertToHornTests.eliminateOrsTestAnd3
                   ConvertToHornTests.eliminateOrsTestAnd2) -}
02422477fb84fe9337e2a4f3edd9d274
  eliminateOrsTestAnd2 ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.andCriteria,
                  GHC.Types.[] @ Types.Rule,
                  ConvertToHornTests.eliminateOrsTestOr27)) -}
122c4741ce3be05af06dbd794986aa8d
  eliminateOrsTestAnd3 ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- Unfolding: (case ConvertToHorn.$weliminateOrs
                        ConvertToHornTests.andCriteria
                        ConvertToHornTests.eliminateOrsTestOr27 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
9446c0d250214baa0ef3607a9940ba0d
  eliminateOrsTestAnd4 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateOrsTestAnd5) -}
df9c52ee6fc38b56f9fe47ceb4ba689d
  eliminateOrsTestAnd5 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateOrsTestAnd6
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
ec6afa59a6034b0df5ca4b560392de2b
  eliminateOrsTestAnd6 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateOrsTestAnd7)) -}
5021e12c5401ac45065f69f91b454c31
  eliminateOrsTestAnd7 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateOrsTestAnd8
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateOrsTestAnd8
                   ConvertToHornTests.simplifyNotsTestNot10) -}
066c637f198e7a93283955b74019b1b4
  eliminateOrsTestAnd8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 99) -}
db307189a351338520c8efc1c2d7c91f
  eliminateOrsTestOr :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateOrsTestOr51
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
bf1e967724529a44d10938d9a58a204e
  eliminateOrsTestOr1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ ([Types.Criteria], [Types.Rule], GHC.Types.Int)
                   ConvertToHornTests.eliminateOrsTestOr46
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)
                   ConvertToHornTests.$s$fShow(,,)
                   ConvertToHornTests.eliminateOrsTestOr45
                   ConvertToHornTests.eliminateOrsTestOr38
                   ConvertToHornTests.eliminateOrsTestOr3) -}
fe574d3956eb9e6f6dc89d296959c00d
  eliminateOrsTestOr10 :: Types.Rule
  {- Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr14
                   ConvertToHornTests.eliminateOrsTestOr12
                   ConvertToHornTests.eliminateOrsTestOr11) -}
b12156c33e3478b6827ab440fcba1e39
  eliminateOrsTestOr11 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# (-1)) -}
511828116e583a8ab93f11299326e28a
  eliminateOrsTestOr12 :: [Types.Target]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Target
                   ConvertToHornTests.eliminateOrsTestOr13
                   (GHC.Types.[] @ Types.Target)) -}
a17a3ce35d2e5ba6384dbbf54b41dc66
  eliminateOrsTestOr13 :: Types.Target
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Types.PropVariableTarget
                   ConvertToHornTests.andCriteria16
                   GHC.Types.False) -}
e6d21c5bc8592d96f0ef35113784ffea
  eliminateOrsTestOr14 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestOr6
                   ConvertToHornTests.eliminateOrsTestOr15) -}
e9b64b8435d9411e70df5b3ce9d887ec
  eliminateOrsTestOr15 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr16
                   (GHC.Types.[] @ Types.Criteria)) -}
73fefb62beb945a584aa45c57dc09a99
  eliminateOrsTestOr16 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not ConvertToHornTests.eliminateOrsTestOr17) -}
41a8343e6f0677be8c1b218b4c98eec7
  eliminateOrsTestOr17 :: Types.Criteria
  {- Unfolding: (Types.Port
                   ConvertToHornTests.andCriteria11
                   ConvertToHornTests.eliminateOrsTestOr18) -}
c4b60de1bcb2bfef47e15996647e6f0a
  eliminateOrsTestOr18 ::
    Data.Either.Either GHC.Types.Int (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Left
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   ConvertToHornTests.andCriteria13) -}
e5e6025f3031d0ffc5755ce443f329bf
  eliminateOrsTestOr19 :: Types.Rule
  {- Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr22
                   ConvertToHornTests.eliminateOrsTestOr20
                   ConvertToHornTests.eliminateOrsTestOr11) -}
0cb6e3be42d3199a7cbff15cfb13b9b7
  eliminateOrsTestOr2 :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.eliminateOrsTestOr1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
b7132fa66c3dff21aae85b89a20f6234
  eliminateOrsTestOr20 :: [Types.Target]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Target
                   ConvertToHornTests.eliminateOrsTestOr21
                   (GHC.Types.[] @ Types.Target)) -}
46f51d896f5f8b927fc9c84a9c5777b4
  eliminateOrsTestOr21 :: Types.Target
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Types.PropVariableTarget
                   ConvertToHornTests.andCriteria16
                   GHC.Types.True) -}
fd9a32083ca28eb057cb103773b02cb8
  eliminateOrsTestOr22 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr17
                   (GHC.Types.[] @ Types.Criteria)) -}
e0c6b13090d654b8387f3ae41966a995
  eliminateOrsTestOr23 :: Types.Rule
  {- Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.simplifyNotsTestOr12
                   ConvertToHornTests.eliminateOrsTestOr20
                   ConvertToHornTests.eliminateOrsTestOr11) -}
2ab2c05d64d533b134e415e2e2b659ae
  eliminateOrsTestOr24 :: Types.Rule
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.simplifyNotsTestMixed38
                   ConvertToHornTests.eliminateOrsTestOr25
                   ConvertToHornTests.eliminateOrsTestOr11) -}
25af7c9b5a9997807e143703c9a9dbfd
  eliminateOrsTestOr25 :: [Types.Target]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Target
                   ConvertToHornTests.eliminateOrsTestOr26
                   (GHC.Types.[] @ Types.Target)) -}
83a92cbf0781c3ab1a1c9b5a687cb209
  eliminateOrsTestOr26 :: Types.Target
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Types.PropVariableTarget
                   ConvertToHornTests.eliminateOrsTestOr27
                   GHC.Types.False) -}
1d19f8c84dae1fe44ddfd5caf9014c03
  eliminateOrsTestOr27 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0) -}
a14494d1839803347a665eb0f574d8a5
  eliminateOrsTestOr28 :: Types.Rule
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.simplifyNotsTestMixed67
                   ConvertToHornTests.eliminateOrsTestOr29
                   ConvertToHornTests.eliminateOrsTestOr11) -}
e720ac8d2c072381c144a2cc968cd416
  eliminateOrsTestOr29 :: [Types.Target]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Target
                   ConvertToHornTests.eliminateOrsTestOr30
                   (GHC.Types.[] @ Types.Target)) -}
d3e7fc40f7365075bda424e72ff965af
  eliminateOrsTestOr3 ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.eliminateOrsTestOr32,
                  ConvertToHornTests.eliminateOrsTestOr4,
                  ConvertToHornTests.andCriteria13)) -}
a88a3afb98823fce63b2a4069eca77c9
  eliminateOrsTestOr30 :: Types.Target
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Types.PropVariableTarget
                   ConvertToHornTests.eliminateOrsTestOr27
                   GHC.Types.True) -}
898a850d85571218799e2b0533ae5e35
  eliminateOrsTestOr31 :: Types.Rule
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.simplifyNotsTestNot2
                   ConvertToHornTests.eliminateOrsTestOr29
                   ConvertToHornTests.eliminateOrsTestOr11) -}
ca1493bb6343d5782244d6d89c4b08fa
  eliminateOrsTestOr32 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr33
                   (GHC.Types.[] @ Types.Criteria)) -}
7e3194129bb6ae183dc8da8a6f41aaae
  eliminateOrsTestOr33 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Types.And ConvertToHornTests.eliminateOrsTestOr34) -}
31965d2b8b7f7daca535adc33e97f54b
  eliminateOrsTestOr34 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr37
                   ConvertToHornTests.eliminateOrsTestOr35) -}
465c4ef97505f8752521209bee1f3a32
  eliminateOrsTestOr35 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr36
                   (GHC.Types.[] @ Types.Criteria)) -}
e215c5cafde7617252193b251a9d7508
  eliminateOrsTestOr36 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Types.PropVariableCriteria
                   ConvertToHornTests.andCriteria16) -}
6191d8867e4fb120103a4900f1b90092
  eliminateOrsTestOr37 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Types.PropVariableCriteria
                   ConvertToHornTests.eliminateOrsTestOr27) -}
66cd93ffb91469c31aa71980cedc7130
  eliminateOrsTestOr38 ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- Unfolding: (case ConvertToHorn.$weliminateOrs
                        ConvertToHornTests.eliminateOrsTestOr39
                        ConvertToHornTests.eliminateOrsTestOr27 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
999c1d188023a1f4d9d172ec517991ad
  eliminateOrsTestOr39 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr40
                   (GHC.Types.[] @ Types.Criteria)) -}
aba47291e8acdae8b11a6b0575701231
  eliminateOrsTestOr4 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr31
                   ConvertToHornTests.eliminateOrsTestOr5) -}
0fb844c1b12ea92b915eb29de36efdfa
  eliminateOrsTestOr40 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateOrsTestOr41) -}
2ea472c5671d0472517b5d44f53a06fa
  eliminateOrsTestOr41 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed65
                   ConvertToHornTests.eliminateOrsTestOr42) -}
416c88eb4d2d188e95366aaf7c97638c
  eliminateOrsTestOr42 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr43
                   (GHC.Types.[] @ Types.Criteria)) -}
e1abd940e3615100ee203b3eee545a26
  eliminateOrsTestOr43 :: Types.Criteria
  {- Unfolding: (Types.Or ConvertToHornTests.eliminateOrsTestOr44) -}
088c39efc17d473df54b4d7dca0a960b
  eliminateOrsTestOr44 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria14
                   ConvertToHornTests.eliminateOrsTestOr22) -}
3b77625da0d148d7f877bd57dea42d79
  eliminateOrsTestOr45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "eliminateOrs is not eliminating corrrectly."#) -}
cc2efdef43281a15bcefc2d149dd3789
  eliminateOrsTestOr46 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateOrsTestOr47) -}
dfb2ccf896d1195018f3f7d2ddbd22ab
  eliminateOrsTestOr47 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateOrsTestOr48
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c303a42fdf5eed1f28db2950504088fa
  eliminateOrsTestOr48 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateOrsTestOr49)) -}
68a0275157cdf0805c482c2390f8e288
  eliminateOrsTestOr49 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateOrsTestOr50
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateOrsTestOr50
                   ConvertToHornTests.simplifyNotsTestNot10) -}
b0390456835d39109838a4d77e3956e4
  eliminateOrsTestOr5 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr28
                   ConvertToHornTests.eliminateOrsTestOr6) -}
a6627e59be7b9881dcfca66a52845cf8
  eliminateOrsTestOr50 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 115) -}
2ba283f17470a6a52e27aabff9b0fdf5
  eliminateOrsTestOr51 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ ([Types.Criteria], [Types.Rule], GHC.Types.Int)
                   ConvertToHornTests.eliminateOrsTestOr68
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)
                   ConvertToHornTests.$s$fShow(,,)
                   ConvertToHornTests.eliminateOrsTestOr45
                   ConvertToHornTests.eliminateOrsTestOr64
                   ConvertToHornTests.eliminateOrsTestOr52) -}
5491a3c6ac11744323135cb98752b8e5
  eliminateOrsTestOr52 ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.eliminateOrsTestOr63,
                  ConvertToHornTests.eliminateOrsTestOr53,
                  ConvertToHornTests.andCriteria16)) -}
5c1fe1d4b13b09b4560e72317d954de9
  eliminateOrsTestOr53 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr61
                   ConvertToHornTests.eliminateOrsTestOr54) -}
3c3304ec8423aea3ec417c15bfbc19fd
  eliminateOrsTestOr54 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr28
                   ConvertToHornTests.eliminateOrsTestOr55) -}
618816e0535af2c0e3ebfe5e8a091c8d
  eliminateOrsTestOr55 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr56
                   (GHC.Types.[] @ Types.Rule)) -}
aa682086686ce4babc32fe37b1d0a1db
  eliminateOrsTestOr56 :: Types.Rule
  {- Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr57
                   ConvertToHornTests.eliminateOrsTestOr25
                   ConvertToHornTests.eliminateOrsTestOr11) -}
99f9113266381ea64f18154fa48d837b
  eliminateOrsTestOr57 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr58
                   ConvertToHornTests.simplifyNotsTestMixed39) -}
a5fc980aff11c75e804ba406f4aae8f2
  eliminateOrsTestOr58 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not ConvertToHornTests.eliminateOrsTestOr59) -}
4bdf83c306a2cc76a277ecea5a43f8d7
  eliminateOrsTestOr59 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.eliminateOrsTestOr60) -}
daa6eb2816d4550a74253141358ca972
  eliminateOrsTestOr6 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr24
                   ConvertToHornTests.eliminateOrsTestOr7) -}
a788bf80205c254e9766a3fd89161fd1
  eliminateOrsTestOr60 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.andCriteria7) -}
27772ab23d83e0a3ade7aa065aa410e5
  eliminateOrsTestOr61 :: Types.Rule
  {- Strictness: m,
     Unfolding: (Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr62
                   ConvertToHornTests.eliminateOrsTestOr29
                   ConvertToHornTests.eliminateOrsTestOr11) -}
23a76c6b646c9ea2c7eec0ff566bee67
  eliminateOrsTestOr62 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr59
                   (GHC.Types.[] @ Types.Criteria)) -}
d331059eb10205f851c91de262a5f134
  eliminateOrsTestOr63 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr37
                   (GHC.Types.[] @ Types.Criteria)) -}
344c34c27cc814da3427245b82930d09
  eliminateOrsTestOr64 ::
    ([Types.Criteria], [Types.Rule], GHC.Types.Int)
  {- Unfolding: (case ConvertToHorn.$weliminateOrs
                        ConvertToHornTests.eliminateOrsTestOr65
                        ConvertToHornTests.eliminateOrsTestOr27 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
6e42219517c78c6e6d9a6e67a8200278
  eliminateOrsTestOr65 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr66
                   (GHC.Types.[] @ Types.Criteria)) -}
d030aa297c524bbb38c1f67a9e80eebe
  eliminateOrsTestOr66 :: Types.Criteria
  {- Unfolding: (Types.Or ConvertToHornTests.eliminateOrsTestOr67) -}
2935fea6952ec05c70063af7f508750f
  eliminateOrsTestOr67 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.eliminateOrsTestOr59
                   ConvertToHornTests.simplifyNotsTestMixed67) -}
2d8d3a22ac4860ccee0551202db90fe0
  eliminateOrsTestOr68 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.eliminateOrsTestOr69) -}
651d48579d88d3de7ebf40a1f87af320
  eliminateOrsTestOr69 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.eliminateOrsTestOr70
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
aa3ef26848fa709f00a687f4b744077b
  eliminateOrsTestOr7 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr23
                   ConvertToHornTests.eliminateOrsTestOr8) -}
344d02bf20bd3178d3ac8672cc66e677
  eliminateOrsTestOr70 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.eliminateOrsTestOr71)) -}
106a6fecdcb50c7b0acebb8944c14ebc
  eliminateOrsTestOr71 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.eliminateOrsTestOr72
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.eliminateOrsTestOr72
                   ConvertToHornTests.simplifyNotsTestNot10) -}
80b11c4144b582637a082b64d760cff4
  eliminateOrsTestOr72 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 104) -}
7177758467edc7419e405c418a1c9158
  eliminateOrsTestOr8 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr19
                   ConvertToHornTests.eliminateOrsTestOr9) -}
1e867333c9a4a60bc5c0b36aba326a14
  eliminateOrsTestOr9 :: [Types.Rule]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Rule
                   ConvertToHornTests.eliminateOrsTestOr10
                   (GHC.Types.[] @ Types.Rule)) -}
4f17fa47275b56bed42ae30f18b85085
  simplifyNotsTestAnd :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.simplifyNotsTestAnd1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
310ffa150ee075f17af3d3d30d653c17
  simplifyNotsTestAnd1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.simplifyNotsTestAnd8
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.simplifyNotsTestMixed68
                   ConvertToHornTests.simplifyNotsTestAnd4
                   ConvertToHornTests.simplifyNotsTestAnd2) -}
d9b0794cd3d95057adf3792245ab4aa4
  simplifyNotsTestAnd10 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.simplifyNotsTestAnd11)) -}
75042ccbfd20736ed53532e69f012095
  simplifyNotsTestAnd11 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.simplifyNotsTestAnd12
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.simplifyNotsTestAnd12
                   ConvertToHornTests.simplifyNotsTestNot10) -}
288fce077b0055028cf9611f71be3deb
  simplifyNotsTestAnd12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 136) -}
960aa4ddb7378845102405e730b723d5
  simplifyNotsTestAnd2 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestAnd3
                   (GHC.Types.[] @ Types.Criteria)) -}
d0ca3606c444210fa0e55119fbec6c42
  simplifyNotsTestAnd3 :: Types.Criteria
  {- Strictness: m2,
     Unfolding: (Types.Or ConvertToHornTests.simplifyNotsTestOr4) -}
e6d5a73a1d06d90dd5f4a34e15627881
  simplifyNotsTestAnd4 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.simplifyNots
                   ConvertToHornTests.simplifyNotsTestAnd5) -}
4e73885cbfb1a0c8300a5b4ba4331000
  simplifyNotsTestAnd5 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestAnd6
                   (GHC.Types.[] @ Types.Criteria)) -}
28e0ccadf96538a15c32f584f8061ef1
  simplifyNotsTestAnd6 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestAnd7) -}
aa79cbc331b5700ca02272e93321d808
  simplifyNotsTestAnd7 :: Types.Criteria
  {- Unfolding: (Types.And
                   ConvertToHornTests.simplifyNotsTestOr11) -}
095089a3193ce47a4128b6d67c82230d
  simplifyNotsTestAnd8 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.simplifyNotsTestAnd9) -}
c7f462295cb7b85b297403f3efe02a49
  simplifyNotsTestAnd9 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.simplifyNotsTestAnd10
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
950f2d590bc09a894eb60af22bb9eda1
  simplifyNotsTestMixed :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.simplifyNotsTestMixed1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
20b2092e99c2b478a712f5d0c8818808
  simplifyNotsTestMixed1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.simplifyNotsTestMixed69
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.simplifyNotsTestMixed68
                   ConvertToHornTests.simplifyNotsTestMixed42
                   ConvertToHornTests.simplifyNotsTestMixed2) -}
b92f7ac548a0b46e458c803c8d9e7f73
  simplifyNotsTestMixed10 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed15
                   ConvertToHornTests.simplifyNotsTestMixed11) -}
b5fbd8e4a552d72b9da403097d08091c
  simplifyNotsTestMixed11 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed12
                   (GHC.Types.[] @ Types.Criteria)) -}
8076e194420316d8bcc5590326036e15
  simplifyNotsTestMixed12 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed13) -}
47e7f16dc29171eb3868472742aa0b2e
  simplifyNotsTestMixed13 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Protocol
                   ConvertToHornTests.simplifyNotsTestMixed14) -}
1057ab9c63fb80b6266afa05ab9160f2
  simplifyNotsTestMixed14 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10) -}
c7ca24ad2e739c299e7873b820534bec
  simplifyNotsTestMixed15 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed16) -}
aa90abf3a9b925a9db76f7c94833f04f
  simplifyNotsTestMixed16 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Protocol
                   ConvertToHornTests.simplifyNotsTestMixed17) -}
f76e0e46860821126355598880ae4ebf
  simplifyNotsTestMixed17 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9) -}
ef0b3fe90e88d5c3bcd0f30883aab3ca
  simplifyNotsTestMixed18 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed19) -}
d79f6861844b99b2f8f67d0edfe1c0fe
  simplifyNotsTestMixed19 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Protocol
                   ConvertToHornTests.simplifyNotsTestMixed20) -}
f6651ff745a8e46b6da4137374ac37c0
  simplifyNotsTestMixed2 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed26
                   ConvertToHornTests.simplifyNotsTestMixed3) -}
243389372ad307e2b113edafbdb28b4c
  simplifyNotsTestMixed20 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8) -}
772fdd76ed1d1b147ba8259b930204f1
  simplifyNotsTestMixed21 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed22) -}
bf40e9b9130a99800b9519266ba265b2
  simplifyNotsTestMixed22 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Protocol
                   ConvertToHornTests.simplifyNotsTestMixed23) -}
ca6fa5bd6418d67a85bebed7669c2757
  simplifyNotsTestMixed23 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7) -}
173e9f159e2a054a4601106b4ae64bae
  simplifyNotsTestMixed24 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Protocol
                   ConvertToHornTests.simplifyNotsTestMixed25) -}
701ce972af8634dad5ddaa00b3503934
  simplifyNotsTestMixed25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5) -}
88d1abd61204a9b4acc2973bc5923da5
  simplifyNotsTestMixed26 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Types.Or ConvertToHornTests.simplifyNotsTestMixed27) -}
de8faea2e6539302fc7747642ca807b7
  simplifyNotsTestMixed27 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed37
                   ConvertToHornTests.simplifyNotsTestMixed28) -}
17b09fdb3cbb60e1b4c783c3d0e88b4a
  simplifyNotsTestMixed28 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed29
                   (GHC.Types.[] @ Types.Criteria)) -}
f50ff3b99e74c48e51e0f25a71d93e07
  simplifyNotsTestMixed29 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Types.Or ConvertToHornTests.simplifyNotsTestMixed30) -}
96f48718f6e97c9fd4bcf2fc02b037f7
  simplifyNotsTestMixed3 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed24
                   ConvertToHornTests.simplifyNotsTestMixed4) -}
7ca3a80614a2712f90c0e54293442043
  simplifyNotsTestMixed30 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed35
                   ConvertToHornTests.simplifyNotsTestMixed31) -}
972da265ac773888bbcf8758fd2df6cc
  simplifyNotsTestMixed31 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed32
                   (GHC.Types.[] @ Types.Criteria)) -}
a37849e82cd2c249e8ca05a60e0a88a3
  simplifyNotsTestMixed32 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed33) -}
df8625baebd5d166f351343802e5ad3e
  simplifyNotsTestMixed33 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Protocol
                   ConvertToHornTests.simplifyNotsTestMixed34) -}
3e4da8a00187f3021426eb783a1f0c9f
  simplifyNotsTestMixed34 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4) -}
05a32bc478a65058018ecc293d810d0d
  simplifyNotsTestMixed35 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed36) -}
cda7a6f5930f9058a2a87026dd091982
  simplifyNotsTestMixed36 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Protocol ConvertToHornTests.andCriteria10) -}
34af2211ea9aac1531f86ddfbc28922f
  simplifyNotsTestMixed37 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Types.And
                   ConvertToHornTests.simplifyNotsTestMixed38) -}
97bf2ee2ebb2f189136ab9104048da95
  simplifyNotsTestMixed38 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed41
                   ConvertToHornTests.simplifyNotsTestMixed39) -}
24072b0a365e7fe2157c3bafc24929ee
  simplifyNotsTestMixed39 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed40
                   (GHC.Types.[] @ Types.Criteria)) -}
2bf0fe1973bb46be994d5ec7ebb6ea09
  simplifyNotsTestMixed4 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed21
                   ConvertToHornTests.simplifyNotsTestMixed5) -}
5abafa00eea1675826fa5a48328dd483
  simplifyNotsTestMixed40 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Types.Not ConvertToHornTests.andCriteria12) -}
a2acf1f75463873cc2007ab817cb3131
  simplifyNotsTestMixed41 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Types.Not ConvertToHornTests.andCriteria17) -}
da8704f2fe841702ad11e03764833106
  simplifyNotsTestMixed42 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.simplifyNots
                   ConvertToHornTests.simplifyNotsTestMixed43) -}
1f1a96de9e2beb447b871e957303ecb6
  simplifyNotsTestMixed43 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed58
                   ConvertToHornTests.simplifyNotsTestMixed44) -}
ed23565f3d53e7c2ecf44057860c658d
  simplifyNotsTestMixed44 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed24
                   ConvertToHornTests.simplifyNotsTestMixed45) -}
35237c79f5e4c1ed87fa46f5d7ad3ecb
  simplifyNotsTestMixed45 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed54
                   ConvertToHornTests.simplifyNotsTestMixed46) -}
982cc6463340fd760f0ebcd71d74f238
  simplifyNotsTestMixed46 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed47
                   (GHC.Types.[] @ Types.Criteria)) -}
479e11ffc0631fbf029893a83001f7c4
  simplifyNotsTestMixed47 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed48) -}
957d8a6d2ed828432e6b9fc795e20e11
  simplifyNotsTestMixed48 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.And
                   ConvertToHornTests.simplifyNotsTestMixed49) -}
19c6bbac1bbd9a92bfad11c3843b4a0b
  simplifyNotsTestMixed49 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed19
                   ConvertToHornTests.simplifyNotsTestMixed50) -}
1338ec0e61b17bdf309c0a6d680cb673
  simplifyNotsTestMixed5 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed6
                   (GHC.Types.[] @ Types.Criteria)) -}
4317ffb780799c1e9d607b06325435fd
  simplifyNotsTestMixed50 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed51
                   (GHC.Types.[] @ Types.Criteria)) -}
895e643fd5629e2c2f4e9179f3a13d3d
  simplifyNotsTestMixed51 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Or ConvertToHornTests.simplifyNotsTestMixed52) -}
604e270c8107034fe9049db068427430
  simplifyNotsTestMixed52 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed16
                   ConvertToHornTests.simplifyNotsTestMixed53) -}
ced64951458336262fdad93a246fe63e
  simplifyNotsTestMixed53 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed13
                   (GHC.Types.[] @ Types.Criteria)) -}
f057d25a21bce23215a5a0b869f579fd
  simplifyNotsTestMixed54 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed55) -}
8057122a11acbacdea1826029870190b
  simplifyNotsTestMixed55 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed56) -}
bec6defa20647d5279c2f09ceaf1d856
  simplifyNotsTestMixed56 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed57) -}
3c8e0acbe5c29c6969c97a141530db93
  simplifyNotsTestMixed57 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed21) -}
0def170edc36cbc48e5bbf0a40c09af7
  simplifyNotsTestMixed58 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed59) -}
c404fc7795f66493e7fc9f59604b0921
  simplifyNotsTestMixed59 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.And
                   ConvertToHornTests.simplifyNotsTestMixed60) -}
38f71c0b73ef55c9af2f1bcf993caf72
  simplifyNotsTestMixed6 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Types.Or ConvertToHornTests.simplifyNotsTestMixed7) -}
10f548379d7c6cb08e7c31bb1faf7979
  simplifyNotsTestMixed60 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed65
                   ConvertToHornTests.simplifyNotsTestMixed61) -}
d0be618eaf26f082193ae2c4a7874487
  simplifyNotsTestMixed61 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed62
                   (GHC.Types.[] @ Types.Criteria)) -}
33de82d45e1215b318c9ab6f74800fc3
  simplifyNotsTestMixed62 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.And
                   ConvertToHornTests.simplifyNotsTestMixed63) -}
02b6cef43e7fd8cf54ad7038c06646b7
  simplifyNotsTestMixed63 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed36
                   ConvertToHornTests.simplifyNotsTestMixed64) -}
4e1d7837821b41e1b597bf469e0d65b3
  simplifyNotsTestMixed64 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed33
                   (GHC.Types.[] @ Types.Criteria)) -}
63d034ca5e619f44d86b09526173d362
  simplifyNotsTestMixed65 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Or ConvertToHornTests.simplifyNotsTestMixed66) -}
622ba4bc23cbf8696dc4a6d0a09cc960
  simplifyNotsTestMixed66 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.simplifyNotsTestMixed67) -}
078a1353e0d1b5543cbdeff3933e1950
  simplifyNotsTestMixed67 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria12
                   (GHC.Types.[] @ Types.Criteria)) -}
c2c34674b697b667f906da80a7402360
  simplifyNotsTestMixed68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "simplifyNot is not adjusting corrrectly."#) -}
94743691330b43a55a36807b30c347be
  simplifyNotsTestMixed69 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.simplifyNotsTestMixed70) -}
53c8feb19dbf7521ac7877ab60fcc7be
  simplifyNotsTestMixed7 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed18
                   ConvertToHornTests.simplifyNotsTestMixed8) -}
fc51d95ed3fb58d4cb406514be8c3af9
  simplifyNotsTestMixed70 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.simplifyNotsTestMixed71
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
adfa57f16b6a89cb17372a0b3f141969
  simplifyNotsTestMixed71 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.simplifyNotsTestMixed72)) -}
cda1ca213f9ccb98a737ed796af288c5
  simplifyNotsTestMixed72 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.simplifyNotsTestMixed74
                   ConvertToHornTests.simplifyNotsTestMixed25
                   ConvertToHornTests.simplifyNotsTestMixed74
                   ConvertToHornTests.simplifyNotsTestMixed73) -}
4fdf3d0a97602c82948884f5b0596c4f
  simplifyNotsTestMixed73 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16) -}
7ac4ef608c8013560cc87e74870e991a
  simplifyNotsTestMixed74 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 151) -}
3ceb371684455e77f8c73cbbf88728f3
  simplifyNotsTestMixed75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/ConvertToHornTests.hs"#) -}
e53ffb146d1ceabc4a1c2e8b5f580474
  simplifyNotsTestMixed76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ConvertToHornTests"#) -}
63e8cbb676e2fe7720d480e4d1ad84ce
  simplifyNotsTestMixed77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
4a01c600f1bc45c7fc0232a27a38d5df
  simplifyNotsTestMixed78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "assertEqual"#) -}
eac04a23c1ba4d56c377556746b566a5
  simplifyNotsTestMixed8 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed9
                   (GHC.Types.[] @ Types.Criteria)) -}
a248ba8061b7c238739caa893ac652e4
  simplifyNotsTestMixed9 :: Types.Criteria
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Types.And
                   ConvertToHornTests.simplifyNotsTestMixed10) -}
a579169766a89b5c4ac1f5cc3e408ac5
  simplifyNotsTestNot :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.simplifyNotsTestNot1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
16abcd399789ead53e40c37f149f3597
  simplifyNotsTestNot1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.simplifyNotsTestNot6
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.simplifyNotsTestMixed68
                   ConvertToHornTests.simplifyNotsTestNot3
                   ConvertToHornTests.simplifyNotsTestNot2) -}
6ab26233ced61dda9829ac9e87383e25
  simplifyNotsTestNot10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 27) -}
0c59c251bfe1c643a3ca52c26e1eaafe
  simplifyNotsTestNot11 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 146) -}
1e6bbb6e5c42fbed07c6cb754d695d89
  simplifyNotsTestNot2 :: [Types.Criteria]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   (GHC.Types.[] @ Types.Criteria)) -}
30958254f7d9138d5fa3c54bba9e813b
  simplifyNotsTestNot3 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.simplifyNots
                   ConvertToHornTests.simplifyNotsTestNot4) -}
8066744451b18c05efef84525379c775
  simplifyNotsTestNot4 :: [Types.Criteria]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestNot5
                   (GHC.Types.[] @ Types.Criteria)) -}
f9e15616b64689498123e9743fbee646
  simplifyNotsTestNot5 :: Types.Criteria
  {- HasNoCafRefs,
     Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestMixed41) -}
e776e1ce5d7c18608680224feb9d16ea
  simplifyNotsTestNot6 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.simplifyNotsTestNot7) -}
dd4d246484bb6edefe542acfab215e2e
  simplifyNotsTestNot7 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.simplifyNotsTestNot8
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
d1238538cedd25f2f00b44e26a6dc5d0
  simplifyNotsTestNot8 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.simplifyNotsTestNot9)) -}
e7e89a8683d62249bff8d8cf311b6b5a
  simplifyNotsTestNot9 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.simplifyNotsTestNot11
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.simplifyNotsTestNot11
                   ConvertToHornTests.simplifyNotsTestNot10) -}
95c25a9fe77e159c27f318f17c099d6f
  simplifyNotsTestOr :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase
                   ConvertToHornTests.simplifyNotsTestOr1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
189b28fff43d84b57ac0d2dfc31be0d7
  simplifyNotsTestOr1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.HUnit.Base.@=?7
                   @ [Types.Criteria]
                   ConvertToHornTests.simplifyNotsTestOr13
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
                   ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
                   ConvertToHornTests.simplifyNotsTestMixed68
                   ConvertToHornTests.simplifyNotsTestOr7
                   ConvertToHornTests.simplifyNotsTestOr2) -}
d8de3cbc61d467d4754d85a434f7e381
  simplifyNotsTestOr10 :: Types.Criteria
  {- Unfolding: (Types.Or ConvertToHornTests.simplifyNotsTestOr11) -}
15493472ef1358c4e37aed0a4d9191f6
  simplifyNotsTestOr11 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria17
                   ConvertToHornTests.simplifyNotsTestOr12) -}
a6a4bbcbc9b82f381a0023958346504c
  simplifyNotsTestOr12 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.andCriteria14
                   (GHC.Types.[] @ Types.Criteria)) -}
6d86370569bbf940c79c3a73ad417eff
  simplifyNotsTestOr13 :: GHC.Stack.CallStack
  {- Strictness: m,
     Unfolding: (GHC.Stack.CallStack
                   ConvertToHornTests.simplifyNotsTestOr14) -}
5cd352d5ac55dfbc13023560ad9cbaff
  simplifyNotsTestOr14 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   ConvertToHornTests.simplifyNotsTestOr15
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
f59357cbb3ef5b47b9ee517db12db539
  simplifyNotsTestOr15 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Strictness: m,
     Unfolding: ((ConvertToHornTests.simplifyNotsTestMixed78,
                  ConvertToHornTests.simplifyNotsTestOr16)) -}
e8bfd5603891c9da1ae260eae67fa9b4
  simplifyNotsTestOr16 :: GHC.SrcLoc.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.SrcLoc.SrcLoc
                   ConvertToHornTests.simplifyNotsTestMixed77
                   ConvertToHornTests.simplifyNotsTestMixed76
                   ConvertToHornTests.simplifyNotsTestMixed75
                   ConvertToHornTests.simplifyNotsTestOr17
                   ConvertToHornTests.simplifyNotsTestMixed73
                   ConvertToHornTests.simplifyNotsTestOr17
                   ConvertToHornTests.simplifyNotsTestNot10) -}
5d3136b06f71a8ab245004589692dc19
  simplifyNotsTestOr17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 141) -}
fa35c11da02cf76986a340ebb3e5beb2
  simplifyNotsTestOr2 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestOr3
                   (GHC.Types.[] @ Types.Criteria)) -}
6303956dbc4bf34f6b8dd9ca0d9c8521
  simplifyNotsTestOr3 :: Types.Criteria
  {- Strictness: m1,
     Unfolding: (Types.And ConvertToHornTests.simplifyNotsTestOr4) -}
80a9603c163c75bd95b01c5faf59fbd2
  simplifyNotsTestOr4 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestMixed41
                   ConvertToHornTests.simplifyNotsTestOr5) -}
6d8c8bb1513d667d1192cdd39354b3d0
  simplifyNotsTestOr5 :: [Types.Criteria]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestOr6
                   (GHC.Types.[] @ Types.Criteria)) -}
24bb0680d43346e42dafcd59ca2db1db
  simplifyNotsTestOr6 :: Types.Criteria
  {- Strictness: m3,
     Unfolding: (Types.Not ConvertToHornTests.andCriteria14) -}
f47fac90ee05cf4b8a444dbd78b3c0f6
  simplifyNotsTestOr7 :: [Types.Criteria]
  {- Unfolding: (ConvertToHorn.simplifyNots
                   ConvertToHornTests.simplifyNotsTestOr8) -}
cfdf372467920cd3de7c2940aa63cd78
  simplifyNotsTestOr8 :: [Types.Criteria]
  {- Unfolding: (GHC.Types.:
                   @ Types.Criteria
                   ConvertToHornTests.simplifyNotsTestOr9
                   (GHC.Types.[] @ Types.Criteria)) -}
d8bb846d4dd7f3699fc0f04c49dea85f
  simplifyNotsTestOr9 :: Types.Criteria
  {- Unfolding: (Types.Not
                   ConvertToHornTests.simplifyNotsTestOr10) -}
"SPEC/ConvertToHornTests $fEq(,,) @ [Criteria] @ [Rule] @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                                         [Types.Criteria]
                                                                               $dEq1 :: GHC.Classes.Eq
                                                                                          [Types.Rule]
                                                                               $dEq2 :: GHC.Classes.Eq
                                                                                          GHC.Types.Int
  GHC.Classes.$fEq(,,) @ [Types.Criteria]
                       @ [Types.Rule]
                       @ GHC.Types.Int
                       $dEq
                       $dEq1
                       $dEq2
  = ConvertToHornTests.$s$fEq(,,)
"SPEC/ConvertToHornTests $fEq(,,)_$c/= @ [Criteria] @ [Rule] @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                                              [Types.Criteria]
                                                                                    $dEq1 :: GHC.Classes.Eq
                                                                                               [Types.Rule]
                                                                                    $dEq2 :: GHC.Classes.Eq
                                                                                               GHC.Types.Int
  GHC.Classes.$fEq(,,)_$c/= @ [Types.Criteria]
                            @ [Types.Rule]
                            @ GHC.Types.Int
                            $dEq
                            $dEq1
                            $dEq2
  = ConvertToHornTests.$s$fEq(,,)_$s$fEq(,,)_$c/=
"SPEC/ConvertToHornTests $fEq[] @ Criteria" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                      Types.Criteria
  GHC.Classes.$fEq[] @ Types.Criteria $dEq
  = ConvertToHornTests.$s$fEq(,,)_$s$fEq[]1
"SPEC/ConvertToHornTests $fEq[] @ Rule" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                  Types.Rule
  GHC.Classes.$fEq[] @ Types.Rule $dEq
  = ConvertToHornTests.$s$fEq(,,)_$s$fEq[]
"SPEC/ConvertToHornTests $fEq[]_$c/= @ Criteria" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                           Types.Criteria
  GHC.Classes.$fEq[]_$c/= @ Types.Criteria $dEq
  = ConvertToHornTests.$s$fEq(,,)_$s$fEq[]_$c/=1
"SPEC/ConvertToHornTests $fEq[]_$c/= @ Rule" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                       Types.Rule
  GHC.Classes.$fEq[]_$c/= @ Types.Rule $dEq
  = ConvertToHornTests.$s$fEq(,,)_$s$fEq[]_$c/=
"SPEC/ConvertToHornTests $fShow(,,) @ [Criteria] @ [Rule] @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                             [Types.Criteria]
                                                                                 $dShow1 :: GHC.Show.Show
                                                                                              [Types.Rule]
                                                                                 $dShow2 :: GHC.Show.Show
                                                                                              GHC.Types.Int
  GHC.Show.$fShow(,,) @ [Types.Criteria]
                      @ [Types.Rule]
                      @ GHC.Types.Int
                      $dShow
                      $dShow1
                      $dShow2
  = ConvertToHornTests.$s$fShow(,,)
"SPEC/ConvertToHornTests $fShow(,,)_$cshow @ [Criteria] @ [Rule] @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                                    [Types.Criteria]
                                                                                        $dShow1 :: GHC.Show.Show
                                                                                                     [Types.Rule]
                                                                                        $dShow2 :: GHC.Show.Show
                                                                                                     GHC.Types.Int
  GHC.Show.$fShow(,,)_$cshow @ [Types.Criteria]
                             @ [Types.Rule]
                             @ GHC.Types.Int
                             $dShow
                             $dShow1
                             $dShow2
  = ConvertToHornTests.$s$fShow(,,)_$s$fShow(,,)_$cshow
"SPEC/ConvertToHornTests $fShow(,,)_$cshowList @ [Criteria] @ [Rule] @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                                        [Types.Criteria]
                                                                                            $dShow1 :: GHC.Show.Show
                                                                                                         [Types.Rule]
                                                                                            $dShow2 :: GHC.Show.Show
                                                                                                         GHC.Types.Int
  GHC.Show.$fShow(,,)_$cshowList @ [Types.Criteria]
                                 @ [Types.Rule]
                                 @ GHC.Types.Int
                                 $dShow
                                 $dShow1
                                 $dShow2
  = ConvertToHornTests.$s$fShow(,,)_$s$fShow(,,)_$cshowList
"SPEC/ConvertToHornTests $fShow[] @ Criteria" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                          Types.Criteria
  GHC.Show.$fShow[] @ Types.Criteria $dShow
  = ConvertToHornTests.$s$fShow(,,)_$s$fShow[]1
"SPEC/ConvertToHornTests $fShow[] @ Rule" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                      Types.Rule
  GHC.Show.$fShow[] @ Types.Rule $dShow
  = ConvertToHornTests.$s$fShow(,,)_$s$fShow[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

